Terminals unused in grammar

   LBRACE
   RBRACE
   SEMICOLON
   DEFAULT
   DO


Grammar

    0 $accept: program $end

    1 program: variable_declaration program
    2        | function_declaration program
    3        | procedure_declaration program
    4        | stmt program
    5        | %empty

    6 variable_declaration: CONST ID const_variable_declaration
    7                     | VAR ID var_variable_declaration

    8 const_variable_declaration: ASSIGN const_expr
    9                           | COLON datatype ASSIGN const_expr

   10 var_variable_declaration: ASSIGN const_expr
   11                         | COLON datatype
   12                         | COLON datatype ASSIGN const_expr
   13                         | COLON ARRAY I_CONST DOT DOT I_CONST OF datatype

   14 const_expr: const_val
   15           | const_expr MOD const_expr
   16           | const_expr MUL const_expr
   17           | const_expr DIV const_expr
   18           | const_expr ADD const_expr
   19           | const_expr SUB const_expr
   20           | const_expr AND const_expr
   21           | const_expr OR const_expr
   22           | const_expr LT const_expr
   23           | const_expr LE const_expr
   24           | const_expr EQ const_expr
   25           | const_expr GE const_expr
   26           | const_expr GT const_expr
   27           | const_expr NE const_expr
   28           | NOT const_expr
   29           | SUB const_expr
   30           | LPAREN const_expr RPAREN

   31 const_val: I_CONST
   32          | F_CONST
   33          | STR_CONST
   34          | ID
   35          | ID LBRACKET const_expr RBRACKET
   36          | TRUE
   37          | FALSE
   38          | function_call_stmt

   39 datatype: INT
   40         | REAL
   41         | STRING
   42         | BOOL

   43 $@1: %empty

   44 function_declaration: FUNCTION ID LPAREN RPAREN COLON datatype $@1 block_program END ID

   45 $@2: %empty

   46 function_declaration: FUNCTION ID LPAREN para_declaration RPAREN COLON datatype $@2 block_program END ID

   47 $@3: %empty

   48 procedure_declaration: PROCEDURE ID LPAREN RPAREN $@3 block_program END ID

   49 $@4: %empty

   50 procedure_declaration: PROCEDURE ID LPAREN para_declaration RPAREN $@4 block_program END ID

   51 para_declaration: ID COLON datatype
   52                 | ID COLON datatype COMMA para_declaration
   53                 | ID COLON ARRAY I_CONST DOT DOT I_CONST OF datatype
   54                 | ID COLON ARRAY I_CONST DOT DOT I_CONST OF datatype COMMA para_declaration

   55 block_program: variable_declaration block_program
   56              | stmt block_program
   57              | %empty

   58 stmt: block_stmt
   59     | assign_stmt
   60     | put_stmt
   61     | get_stmt
   62     | result_stmt
   63     | exit_stmt
   64     | skip_stmt
   65     | if_stmt
   66     | loop_stmt
   67     | for_stmt

   68 $@5: %empty

   69 block_stmt: _BEGIN $@5 block_program END

   70 assign_stmt: ID ASSIGN const_expr
   71            | ID LBRACKET const_expr RBRACKET ASSIGN const_expr

   72 put_stmt: PUT const_expr

   73 get_stmt: GET ID
   74         | GET ID LBRACKET const_expr RBRACKET

   75 result_stmt: RESULT const_expr
   76            | RETURN

   77 exit_stmt: EXIT
   78          | EXIT WHEN const_expr

   79 skip_stmt: SKIP

   80 $@6: %empty

   81 $@7: %empty

   82 if_stmt: IF const_expr THEN $@6 block_program $@7 end_if_stmt

   83 end_if_stmt: END IF

   84 $@8: %empty

   85 end_if_stmt: ELSE $@8 block_program END IF

   86 $@9: %empty

   87 loop_stmt: LOOP $@9 block_program END LOOP

   88 $@10: %empty

   89 for_stmt: FOR ID $@10 COLON const_expr DOT DOT const_expr block_program END FOR

   90 $@11: %empty

   91 for_stmt: FOR DECREASING ID $@11 COLON const_expr DOT DOT const_expr block_program END FOR

   92 function_call_stmt: ID LPAREN RPAREN
   93                   | ID LPAREN function_call_para RPAREN

   94 function_call_para: const_expr
   95                   | const_expr COMMA function_call_para


Terminals, with rules where they appear

$end (0) 0
error (256)
DOT (258) 13 53 54 89 91
COMMA (259) 52 54 95
COLON (260) 9 11 12 13 44 46 51 52 53 54 89 91
LPAREN (261) 30 44 46 48 50 92 93
RPAREN (262) 30 44 46 48 50 92 93
LBRACKET (263) 35 71 74
RBRACKET (264) 35 71 74
LBRACE (265)
RBRACE (266)
SEMICOLON (267)
ASSIGN (268) 8 9 10 12 70 71
PUT (269) 72
_BEGIN (270) 69
DECREASING (271) 91
DEFAULT (272)
DO (273)
WHEN (274) 78
IF (275) 82 83 85
ELSE (276) 85
END (277) 44 46 48 50 69 83 85 87 89 91
EXIT (278) 77 78
FOR (279) 89 91
FUNCTION (280) 44 46
GET (281) 73 74
LOOP (282) 87
OF (283) 13 53 54
PROCEDURE (284) 48 50
REAL (285) 40
RESULT (286) 75
RETURN (287) 76
SKIP (288) 79
THEN (289) 82
VAR (290) 7
CONST (291) 6
INT (292) 39
STRING (293) 41
ARRAY (294) 13 53 54
BOOL (295) 42
NOT (296) 28
AND (297) 20
OR (298) 21
LT (299) 22
LE (300) 23
EQ (301) 24
GE (302) 25
GT (303) 26
NE (304) 27
ADD (305) 18
SUB (306) 19 29
MUL (307) 16
DIV (308) 17
MOD (309) 15
UMINUS (310)
I_CONST (311) 13 31 53 54
F_CONST (312) 32
STR_CONST (313) 33
ID (314) 6 7 34 35 44 46 48 50 51 52 53 54 70 71 73 74 89 91 92 93
TRUE (315) 36
FALSE (316) 37


Nonterminals, with rules where they appear

$accept (62)
    on left: 0
program (63)
    on left: 1 2 3 4 5, on right: 0 1 2 3 4
variable_declaration (64)
    on left: 6 7, on right: 1 55
const_variable_declaration (65)
    on left: 8 9, on right: 6
var_variable_declaration (66)
    on left: 10 11 12 13, on right: 7
const_expr (67)
    on left: 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30, on right:
    8 9 10 12 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 35 70
    71 72 74 75 78 82 89 91 94 95
const_val (68)
    on left: 31 32 33 34 35 36 37 38, on right: 14
datatype (69)
    on left: 39 40 41 42, on right: 9 11 12 13 44 46 51 52 53 54
function_declaration (70)
    on left: 44 46, on right: 2
$@1 (71)
    on left: 43, on right: 44
$@2 (72)
    on left: 45, on right: 46
procedure_declaration (73)
    on left: 48 50, on right: 3
$@3 (74)
    on left: 47, on right: 48
$@4 (75)
    on left: 49, on right: 50
para_declaration (76)
    on left: 51 52 53 54, on right: 46 50 52 54
block_program (77)
    on left: 55 56 57, on right: 44 46 48 50 55 56 69 82 85 87 89 91
stmt (78)
    on left: 58 59 60 61 62 63 64 65 66 67, on right: 4 56
block_stmt (79)
    on left: 69, on right: 58
$@5 (80)
    on left: 68, on right: 69
assign_stmt (81)
    on left: 70 71, on right: 59
put_stmt (82)
    on left: 72, on right: 60
get_stmt (83)
    on left: 73 74, on right: 61
result_stmt (84)
    on left: 75 76, on right: 62
exit_stmt (85)
    on left: 77 78, on right: 63
skip_stmt (86)
    on left: 79, on right: 64
if_stmt (87)
    on left: 82, on right: 65
$@6 (88)
    on left: 80, on right: 82
$@7 (89)
    on left: 81, on right: 82
end_if_stmt (90)
    on left: 83 85, on right: 82
$@8 (91)
    on left: 84, on right: 85
loop_stmt (92)
    on left: 87, on right: 66
$@9 (93)
    on left: 86, on right: 87
for_stmt (94)
    on left: 89 91, on right: 67
$@10 (95)
    on left: 88, on right: 89
$@11 (96)
    on left: 90, on right: 91
function_call_stmt (97)
    on left: 92 93, on right: 38
function_call_para (98)
    on left: 94 95, on right: 93 95


State 0

    0 $accept: . program $end

    PUT        shift, and go to state 1
    _BEGIN     shift, and go to state 2
    IF         shift, and go to state 3
    EXIT       shift, and go to state 4
    FOR        shift, and go to state 5
    FUNCTION   shift, and go to state 6
    GET        shift, and go to state 7
    LOOP       shift, and go to state 8
    PROCEDURE  shift, and go to state 9
    RESULT     shift, and go to state 10
    RETURN     shift, and go to state 11
    SKIP       shift, and go to state 12
    VAR        shift, and go to state 13
    CONST      shift, and go to state 14
    ID         shift, and go to state 15

    $default  reduce using rule 5 (program)

    program                go to state 16
    variable_declaration   go to state 17
    function_declaration   go to state 18
    procedure_declaration  go to state 19
    stmt                   go to state 20
    block_stmt             go to state 21
    assign_stmt            go to state 22
    put_stmt               go to state 23
    get_stmt               go to state 24
    result_stmt            go to state 25
    exit_stmt              go to state 26
    skip_stmt              go to state 27
    if_stmt                go to state 28
    loop_stmt              go to state 29
    for_stmt               go to state 30


State 1

   72 put_stmt: PUT . const_expr

    LPAREN     shift, and go to state 31
    NOT        shift, and go to state 32
    SUB        shift, and go to state 33
    I_CONST    shift, and go to state 34
    F_CONST    shift, and go to state 35
    STR_CONST  shift, and go to state 36
    ID         shift, and go to state 37
    TRUE       shift, and go to state 38
    FALSE      shift, and go to state 39

    const_expr          go to state 40
    const_val           go to state 41
    function_call_stmt  go to state 42


State 2

   69 block_stmt: _BEGIN . $@5 block_program END

    $default  reduce using rule 68 ($@5)

    $@5  go to state 43


State 3

   82 if_stmt: IF . const_expr THEN $@6 block_program $@7 end_if_stmt

    LPAREN     shift, and go to state 31
    NOT        shift, and go to state 32
    SUB        shift, and go to state 33
    I_CONST    shift, and go to state 34
    F_CONST    shift, and go to state 35
    STR_CONST  shift, and go to state 36
    ID         shift, and go to state 37
    TRUE       shift, and go to state 38
    FALSE      shift, and go to state 39

    const_expr          go to state 44
    const_val           go to state 41
    function_call_stmt  go to state 42


State 4

   77 exit_stmt: EXIT .
   78          | EXIT . WHEN const_expr

    WHEN  shift, and go to state 45

    $default  reduce using rule 77 (exit_stmt)


State 5

   89 for_stmt: FOR . ID $@10 COLON const_expr DOT DOT const_expr block_program END FOR
   91         | FOR . DECREASING ID $@11 COLON const_expr DOT DOT const_expr block_program END FOR

    DECREASING  shift, and go to state 46
    ID          shift, and go to state 47


State 6

   44 function_declaration: FUNCTION . ID LPAREN RPAREN COLON datatype $@1 block_program END ID
   46                     | FUNCTION . ID LPAREN para_declaration RPAREN COLON datatype $@2 block_program END ID

    ID  shift, and go to state 48


State 7

   73 get_stmt: GET . ID
   74         | GET . ID LBRACKET const_expr RBRACKET

    ID  shift, and go to state 49


State 8

   87 loop_stmt: LOOP . $@9 block_program END LOOP

    $default  reduce using rule 86 ($@9)

    $@9  go to state 50


State 9

   48 procedure_declaration: PROCEDURE . ID LPAREN RPAREN $@3 block_program END ID
   50                      | PROCEDURE . ID LPAREN para_declaration RPAREN $@4 block_program END ID

    ID  shift, and go to state 51


State 10

   75 result_stmt: RESULT . const_expr

    LPAREN     shift, and go to state 31
    NOT        shift, and go to state 32
    SUB        shift, and go to state 33
    I_CONST    shift, and go to state 34
    F_CONST    shift, and go to state 35
    STR_CONST  shift, and go to state 36
    ID         shift, and go to state 37
    TRUE       shift, and go to state 38
    FALSE      shift, and go to state 39

    const_expr          go to state 52
    const_val           go to state 41
    function_call_stmt  go to state 42


State 11

   76 result_stmt: RETURN .

    $default  reduce using rule 76 (result_stmt)


State 12

   79 skip_stmt: SKIP .

    $default  reduce using rule 79 (skip_stmt)


State 13

    7 variable_declaration: VAR . ID var_variable_declaration

    ID  shift, and go to state 53


State 14

    6 variable_declaration: CONST . ID const_variable_declaration

    ID  shift, and go to state 54


State 15

   70 assign_stmt: ID . ASSIGN const_expr
   71            | ID . LBRACKET const_expr RBRACKET ASSIGN const_expr

    LBRACKET  shift, and go to state 55
    ASSIGN    shift, and go to state 56


State 16

    0 $accept: program . $end

    $end  shift, and go to state 57


State 17

    1 program: variable_declaration . program

    PUT        shift, and go to state 1
    _BEGIN     shift, and go to state 2
    IF         shift, and go to state 3
    EXIT       shift, and go to state 4
    FOR        shift, and go to state 5
    FUNCTION   shift, and go to state 6
    GET        shift, and go to state 7
    LOOP       shift, and go to state 8
    PROCEDURE  shift, and go to state 9
    RESULT     shift, and go to state 10
    RETURN     shift, and go to state 11
    SKIP       shift, and go to state 12
    VAR        shift, and go to state 13
    CONST      shift, and go to state 14
    ID         shift, and go to state 15

    $default  reduce using rule 5 (program)

    program                go to state 58
    variable_declaration   go to state 17
    function_declaration   go to state 18
    procedure_declaration  go to state 19
    stmt                   go to state 20
    block_stmt             go to state 21
    assign_stmt            go to state 22
    put_stmt               go to state 23
    get_stmt               go to state 24
    result_stmt            go to state 25
    exit_stmt              go to state 26
    skip_stmt              go to state 27
    if_stmt                go to state 28
    loop_stmt              go to state 29
    for_stmt               go to state 30


State 18

    2 program: function_declaration . program

    PUT        shift, and go to state 1
    _BEGIN     shift, and go to state 2
    IF         shift, and go to state 3
    EXIT       shift, and go to state 4
    FOR        shift, and go to state 5
    FUNCTION   shift, and go to state 6
    GET        shift, and go to state 7
    LOOP       shift, and go to state 8
    PROCEDURE  shift, and go to state 9
    RESULT     shift, and go to state 10
    RETURN     shift, and go to state 11
    SKIP       shift, and go to state 12
    VAR        shift, and go to state 13
    CONST      shift, and go to state 14
    ID         shift, and go to state 15

    $default  reduce using rule 5 (program)

    program                go to state 59
    variable_declaration   go to state 17
    function_declaration   go to state 18
    procedure_declaration  go to state 19
    stmt                   go to state 20
    block_stmt             go to state 21
    assign_stmt            go to state 22
    put_stmt               go to state 23
    get_stmt               go to state 24
    result_stmt            go to state 25
    exit_stmt              go to state 26
    skip_stmt              go to state 27
    if_stmt                go to state 28
    loop_stmt              go to state 29
    for_stmt               go to state 30


State 19

    3 program: procedure_declaration . program

    PUT        shift, and go to state 1
    _BEGIN     shift, and go to state 2
    IF         shift, and go to state 3
    EXIT       shift, and go to state 4
    FOR        shift, and go to state 5
    FUNCTION   shift, and go to state 6
    GET        shift, and go to state 7
    LOOP       shift, and go to state 8
    PROCEDURE  shift, and go to state 9
    RESULT     shift, and go to state 10
    RETURN     shift, and go to state 11
    SKIP       shift, and go to state 12
    VAR        shift, and go to state 13
    CONST      shift, and go to state 14
    ID         shift, and go to state 15

    $default  reduce using rule 5 (program)

    program                go to state 60
    variable_declaration   go to state 17
    function_declaration   go to state 18
    procedure_declaration  go to state 19
    stmt                   go to state 20
    block_stmt             go to state 21
    assign_stmt            go to state 22
    put_stmt               go to state 23
    get_stmt               go to state 24
    result_stmt            go to state 25
    exit_stmt              go to state 26
    skip_stmt              go to state 27
    if_stmt                go to state 28
    loop_stmt              go to state 29
    for_stmt               go to state 30


State 20

    4 program: stmt . program

    PUT        shift, and go to state 1
    _BEGIN     shift, and go to state 2
    IF         shift, and go to state 3
    EXIT       shift, and go to state 4
    FOR        shift, and go to state 5
    FUNCTION   shift, and go to state 6
    GET        shift, and go to state 7
    LOOP       shift, and go to state 8
    PROCEDURE  shift, and go to state 9
    RESULT     shift, and go to state 10
    RETURN     shift, and go to state 11
    SKIP       shift, and go to state 12
    VAR        shift, and go to state 13
    CONST      shift, and go to state 14
    ID         shift, and go to state 15

    $default  reduce using rule 5 (program)

    program                go to state 61
    variable_declaration   go to state 17
    function_declaration   go to state 18
    procedure_declaration  go to state 19
    stmt                   go to state 20
    block_stmt             go to state 21
    assign_stmt            go to state 22
    put_stmt               go to state 23
    get_stmt               go to state 24
    result_stmt            go to state 25
    exit_stmt              go to state 26
    skip_stmt              go to state 27
    if_stmt                go to state 28
    loop_stmt              go to state 29
    for_stmt               go to state 30


State 21

   58 stmt: block_stmt .

    $default  reduce using rule 58 (stmt)


State 22

   59 stmt: assign_stmt .

    $default  reduce using rule 59 (stmt)


State 23

   60 stmt: put_stmt .

    $default  reduce using rule 60 (stmt)


State 24

   61 stmt: get_stmt .

    $default  reduce using rule 61 (stmt)


State 25

   62 stmt: result_stmt .

    $default  reduce using rule 62 (stmt)


State 26

   63 stmt: exit_stmt .

    $default  reduce using rule 63 (stmt)


State 27

   64 stmt: skip_stmt .

    $default  reduce using rule 64 (stmt)


State 28

   65 stmt: if_stmt .

    $default  reduce using rule 65 (stmt)


State 29

   66 stmt: loop_stmt .

    $default  reduce using rule 66 (stmt)


State 30

   67 stmt: for_stmt .

    $default  reduce using rule 67 (stmt)


State 31

   30 const_expr: LPAREN . const_expr RPAREN

    LPAREN     shift, and go to state 31
    NOT        shift, and go to state 32
    SUB        shift, and go to state 33
    I_CONST    shift, and go to state 34
    F_CONST    shift, and go to state 35
    STR_CONST  shift, and go to state 36
    ID         shift, and go to state 37
    TRUE       shift, and go to state 38
    FALSE      shift, and go to state 39

    const_expr          go to state 62
    const_val           go to state 41
    function_call_stmt  go to state 42


State 32

   28 const_expr: NOT . const_expr

    LPAREN     shift, and go to state 31
    NOT        shift, and go to state 32
    SUB        shift, and go to state 33
    I_CONST    shift, and go to state 34
    F_CONST    shift, and go to state 35
    STR_CONST  shift, and go to state 36
    ID         shift, and go to state 37
    TRUE       shift, and go to state 38
    FALSE      shift, and go to state 39

    const_expr          go to state 63
    const_val           go to state 41
    function_call_stmt  go to state 42


State 33

   29 const_expr: SUB . const_expr

    LPAREN     shift, and go to state 31
    NOT        shift, and go to state 32
    SUB        shift, and go to state 33
    I_CONST    shift, and go to state 34
    F_CONST    shift, and go to state 35
    STR_CONST  shift, and go to state 36
    ID         shift, and go to state 37
    TRUE       shift, and go to state 38
    FALSE      shift, and go to state 39

    const_expr          go to state 64
    const_val           go to state 41
    function_call_stmt  go to state 42


State 34

   31 const_val: I_CONST .

    $default  reduce using rule 31 (const_val)


State 35

   32 const_val: F_CONST .

    $default  reduce using rule 32 (const_val)


State 36

   33 const_val: STR_CONST .

    $default  reduce using rule 33 (const_val)


State 37

   34 const_val: ID .
   35          | ID . LBRACKET const_expr RBRACKET
   92 function_call_stmt: ID . LPAREN RPAREN
   93                   | ID . LPAREN function_call_para RPAREN

    LPAREN    shift, and go to state 65
    LBRACKET  shift, and go to state 66

    $default  reduce using rule 34 (const_val)


State 38

   36 const_val: TRUE .

    $default  reduce using rule 36 (const_val)


State 39

   37 const_val: FALSE .

    $default  reduce using rule 37 (const_val)


State 40

   15 const_expr: const_expr . MOD const_expr
   16           | const_expr . MUL const_expr
   17           | const_expr . DIV const_expr
   18           | const_expr . ADD const_expr
   19           | const_expr . SUB const_expr
   20           | const_expr . AND const_expr
   21           | const_expr . OR const_expr
   22           | const_expr . LT const_expr
   23           | const_expr . LE const_expr
   24           | const_expr . EQ const_expr
   25           | const_expr . GE const_expr
   26           | const_expr . GT const_expr
   27           | const_expr . NE const_expr
   72 put_stmt: PUT const_expr .

    AND  shift, and go to state 67
    OR   shift, and go to state 68
    LT   shift, and go to state 69
    LE   shift, and go to state 70
    EQ   shift, and go to state 71
    GE   shift, and go to state 72
    GT   shift, and go to state 73
    NE   shift, and go to state 74
    ADD  shift, and go to state 75
    SUB  shift, and go to state 76
    MUL  shift, and go to state 77
    DIV  shift, and go to state 78
    MOD  shift, and go to state 79

    $default  reduce using rule 72 (put_stmt)


State 41

   14 const_expr: const_val .

    $default  reduce using rule 14 (const_expr)


State 42

   38 const_val: function_call_stmt .

    $default  reduce using rule 38 (const_val)


State 43

   69 block_stmt: _BEGIN $@5 . block_program END

    PUT     shift, and go to state 1
    _BEGIN  shift, and go to state 2
    IF      shift, and go to state 3
    EXIT    shift, and go to state 4
    FOR     shift, and go to state 5
    GET     shift, and go to state 7
    LOOP    shift, and go to state 8
    RESULT  shift, and go to state 10
    RETURN  shift, and go to state 11
    SKIP    shift, and go to state 12
    VAR     shift, and go to state 13
    CONST   shift, and go to state 14
    ID      shift, and go to state 15

    $default  reduce using rule 57 (block_program)

    variable_declaration  go to state 80
    block_program         go to state 81
    stmt                  go to state 82
    block_stmt            go to state 21
    assign_stmt           go to state 22
    put_stmt              go to state 23
    get_stmt              go to state 24
    result_stmt           go to state 25
    exit_stmt             go to state 26
    skip_stmt             go to state 27
    if_stmt               go to state 28
    loop_stmt             go to state 29
    for_stmt              go to state 30


State 44

   15 const_expr: const_expr . MOD const_expr
   16           | const_expr . MUL const_expr
   17           | const_expr . DIV const_expr
   18           | const_expr . ADD const_expr
   19           | const_expr . SUB const_expr
   20           | const_expr . AND const_expr
   21           | const_expr . OR const_expr
   22           | const_expr . LT const_expr
   23           | const_expr . LE const_expr
   24           | const_expr . EQ const_expr
   25           | const_expr . GE const_expr
   26           | const_expr . GT const_expr
   27           | const_expr . NE const_expr
   82 if_stmt: IF const_expr . THEN $@6 block_program $@7 end_if_stmt

    THEN  shift, and go to state 83
    AND   shift, and go to state 67
    OR    shift, and go to state 68
    LT    shift, and go to state 69
    LE    shift, and go to state 70
    EQ    shift, and go to state 71
    GE    shift, and go to state 72
    GT    shift, and go to state 73
    NE    shift, and go to state 74
    ADD   shift, and go to state 75
    SUB   shift, and go to state 76
    MUL   shift, and go to state 77
    DIV   shift, and go to state 78
    MOD   shift, and go to state 79


State 45

   78 exit_stmt: EXIT WHEN . const_expr

    LPAREN     shift, and go to state 31
    NOT        shift, and go to state 32
    SUB        shift, and go to state 33
    I_CONST    shift, and go to state 34
    F_CONST    shift, and go to state 35
    STR_CONST  shift, and go to state 36
    ID         shift, and go to state 37
    TRUE       shift, and go to state 38
    FALSE      shift, and go to state 39

    const_expr          go to state 84
    const_val           go to state 41
    function_call_stmt  go to state 42


State 46

   91 for_stmt: FOR DECREASING . ID $@11 COLON const_expr DOT DOT const_expr block_program END FOR

    ID  shift, and go to state 85


State 47

   89 for_stmt: FOR ID . $@10 COLON const_expr DOT DOT const_expr block_program END FOR

    $default  reduce using rule 88 ($@10)

    $@10  go to state 86


State 48

   44 function_declaration: FUNCTION ID . LPAREN RPAREN COLON datatype $@1 block_program END ID
   46                     | FUNCTION ID . LPAREN para_declaration RPAREN COLON datatype $@2 block_program END ID

    LPAREN  shift, and go to state 87


State 49

   73 get_stmt: GET ID .
   74         | GET ID . LBRACKET const_expr RBRACKET

    LBRACKET  shift, and go to state 88

    $default  reduce using rule 73 (get_stmt)


State 50

   87 loop_stmt: LOOP $@9 . block_program END LOOP

    PUT     shift, and go to state 1
    _BEGIN  shift, and go to state 2
    IF      shift, and go to state 3
    EXIT    shift, and go to state 4
    FOR     shift, and go to state 5
    GET     shift, and go to state 7
    LOOP    shift, and go to state 8
    RESULT  shift, and go to state 10
    RETURN  shift, and go to state 11
    SKIP    shift, and go to state 12
    VAR     shift, and go to state 13
    CONST   shift, and go to state 14
    ID      shift, and go to state 15

    $default  reduce using rule 57 (block_program)

    variable_declaration  go to state 80
    block_program         go to state 89
    stmt                  go to state 82
    block_stmt            go to state 21
    assign_stmt           go to state 22
    put_stmt              go to state 23
    get_stmt              go to state 24
    result_stmt           go to state 25
    exit_stmt             go to state 26
    skip_stmt             go to state 27
    if_stmt               go to state 28
    loop_stmt             go to state 29
    for_stmt              go to state 30


State 51

   48 procedure_declaration: PROCEDURE ID . LPAREN RPAREN $@3 block_program END ID
   50                      | PROCEDURE ID . LPAREN para_declaration RPAREN $@4 block_program END ID

    LPAREN  shift, and go to state 90


State 52

   15 const_expr: const_expr . MOD const_expr
   16           | const_expr . MUL const_expr
   17           | const_expr . DIV const_expr
   18           | const_expr . ADD const_expr
   19           | const_expr . SUB const_expr
   20           | const_expr . AND const_expr
   21           | const_expr . OR const_expr
   22           | const_expr . LT const_expr
   23           | const_expr . LE const_expr
   24           | const_expr . EQ const_expr
   25           | const_expr . GE const_expr
   26           | const_expr . GT const_expr
   27           | const_expr . NE const_expr
   75 result_stmt: RESULT const_expr .

    AND  shift, and go to state 67
    OR   shift, and go to state 68
    LT   shift, and go to state 69
    LE   shift, and go to state 70
    EQ   shift, and go to state 71
    GE   shift, and go to state 72
    GT   shift, and go to state 73
    NE   shift, and go to state 74
    ADD  shift, and go to state 75
    SUB  shift, and go to state 76
    MUL  shift, and go to state 77
    DIV  shift, and go to state 78
    MOD  shift, and go to state 79

    $default  reduce using rule 75 (result_stmt)


State 53

    7 variable_declaration: VAR ID . var_variable_declaration

    COLON   shift, and go to state 91
    ASSIGN  shift, and go to state 92

    var_variable_declaration  go to state 93


State 54

    6 variable_declaration: CONST ID . const_variable_declaration

    COLON   shift, and go to state 94
    ASSIGN  shift, and go to state 95

    const_variable_declaration  go to state 96


State 55

   71 assign_stmt: ID LBRACKET . const_expr RBRACKET ASSIGN const_expr

    LPAREN     shift, and go to state 31
    NOT        shift, and go to state 32
    SUB        shift, and go to state 33
    I_CONST    shift, and go to state 34
    F_CONST    shift, and go to state 35
    STR_CONST  shift, and go to state 36
    ID         shift, and go to state 37
    TRUE       shift, and go to state 38
    FALSE      shift, and go to state 39

    const_expr          go to state 97
    const_val           go to state 41
    function_call_stmt  go to state 42


State 56

   70 assign_stmt: ID ASSIGN . const_expr

    LPAREN     shift, and go to state 31
    NOT        shift, and go to state 32
    SUB        shift, and go to state 33
    I_CONST    shift, and go to state 34
    F_CONST    shift, and go to state 35
    STR_CONST  shift, and go to state 36
    ID         shift, and go to state 37
    TRUE       shift, and go to state 38
    FALSE      shift, and go to state 39

    const_expr          go to state 98
    const_val           go to state 41
    function_call_stmt  go to state 42


State 57

    0 $accept: program $end .

    $default  accept


State 58

    1 program: variable_declaration program .

    $default  reduce using rule 1 (program)


State 59

    2 program: function_declaration program .

    $default  reduce using rule 2 (program)


State 60

    3 program: procedure_declaration program .

    $default  reduce using rule 3 (program)


State 61

    4 program: stmt program .

    $default  reduce using rule 4 (program)


State 62

   15 const_expr: const_expr . MOD const_expr
   16           | const_expr . MUL const_expr
   17           | const_expr . DIV const_expr
   18           | const_expr . ADD const_expr
   19           | const_expr . SUB const_expr
   20           | const_expr . AND const_expr
   21           | const_expr . OR const_expr
   22           | const_expr . LT const_expr
   23           | const_expr . LE const_expr
   24           | const_expr . EQ const_expr
   25           | const_expr . GE const_expr
   26           | const_expr . GT const_expr
   27           | const_expr . NE const_expr
   30           | LPAREN const_expr . RPAREN

    RPAREN  shift, and go to state 99
    AND     shift, and go to state 67
    OR      shift, and go to state 68
    LT      shift, and go to state 69
    LE      shift, and go to state 70
    EQ      shift, and go to state 71
    GE      shift, and go to state 72
    GT      shift, and go to state 73
    NE      shift, and go to state 74
    ADD     shift, and go to state 75
    SUB     shift, and go to state 76
    MUL     shift, and go to state 77
    DIV     shift, and go to state 78
    MOD     shift, and go to state 79


State 63

   15 const_expr: const_expr . MOD const_expr
   16           | const_expr . MUL const_expr
   17           | const_expr . DIV const_expr
   18           | const_expr . ADD const_expr
   19           | const_expr . SUB const_expr
   20           | const_expr . AND const_expr
   21           | const_expr . OR const_expr
   22           | const_expr . LT const_expr
   23           | const_expr . LE const_expr
   24           | const_expr . EQ const_expr
   25           | const_expr . GE const_expr
   26           | const_expr . GT const_expr
   27           | const_expr . NE const_expr
   28           | NOT const_expr .

    LT   shift, and go to state 69
    LE   shift, and go to state 70
    EQ   shift, and go to state 71
    GE   shift, and go to state 72
    GT   shift, and go to state 73
    NE   shift, and go to state 74
    ADD  shift, and go to state 75
    SUB  shift, and go to state 76
    MUL  shift, and go to state 77
    DIV  shift, and go to state 78
    MOD  shift, and go to state 79

    $default  reduce using rule 28 (const_expr)


State 64

   15 const_expr: const_expr . MOD const_expr
   16           | const_expr . MUL const_expr
   17           | const_expr . DIV const_expr
   18           | const_expr . ADD const_expr
   19           | const_expr . SUB const_expr
   20           | const_expr . AND const_expr
   21           | const_expr . OR const_expr
   22           | const_expr . LT const_expr
   23           | const_expr . LE const_expr
   24           | const_expr . EQ const_expr
   25           | const_expr . GE const_expr
   26           | const_expr . GT const_expr
   27           | const_expr . NE const_expr
   29           | SUB const_expr .

    $default  reduce using rule 29 (const_expr)


State 65

   92 function_call_stmt: ID LPAREN . RPAREN
   93                   | ID LPAREN . function_call_para RPAREN

    LPAREN     shift, and go to state 31
    RPAREN     shift, and go to state 100
    NOT        shift, and go to state 32
    SUB        shift, and go to state 33
    I_CONST    shift, and go to state 34
    F_CONST    shift, and go to state 35
    STR_CONST  shift, and go to state 36
    ID         shift, and go to state 37
    TRUE       shift, and go to state 38
    FALSE      shift, and go to state 39

    const_expr          go to state 101
    const_val           go to state 41
    function_call_stmt  go to state 42
    function_call_para  go to state 102


State 66

   35 const_val: ID LBRACKET . const_expr RBRACKET

    LPAREN     shift, and go to state 31
    NOT        shift, and go to state 32
    SUB        shift, and go to state 33
    I_CONST    shift, and go to state 34
    F_CONST    shift, and go to state 35
    STR_CONST  shift, and go to state 36
    ID         shift, and go to state 37
    TRUE       shift, and go to state 38
    FALSE      shift, and go to state 39

    const_expr          go to state 103
    const_val           go to state 41
    function_call_stmt  go to state 42


State 67

   20 const_expr: const_expr AND . const_expr

    LPAREN     shift, and go to state 31
    NOT        shift, and go to state 32
    SUB        shift, and go to state 33
    I_CONST    shift, and go to state 34
    F_CONST    shift, and go to state 35
    STR_CONST  shift, and go to state 36
    ID         shift, and go to state 37
    TRUE       shift, and go to state 38
    FALSE      shift, and go to state 39

    const_expr          go to state 104
    const_val           go to state 41
    function_call_stmt  go to state 42


State 68

   21 const_expr: const_expr OR . const_expr

    LPAREN     shift, and go to state 31
    NOT        shift, and go to state 32
    SUB        shift, and go to state 33
    I_CONST    shift, and go to state 34
    F_CONST    shift, and go to state 35
    STR_CONST  shift, and go to state 36
    ID         shift, and go to state 37
    TRUE       shift, and go to state 38
    FALSE      shift, and go to state 39

    const_expr          go to state 105
    const_val           go to state 41
    function_call_stmt  go to state 42


State 69

   22 const_expr: const_expr LT . const_expr

    LPAREN     shift, and go to state 31
    NOT        shift, and go to state 32
    SUB        shift, and go to state 33
    I_CONST    shift, and go to state 34
    F_CONST    shift, and go to state 35
    STR_CONST  shift, and go to state 36
    ID         shift, and go to state 37
    TRUE       shift, and go to state 38
    FALSE      shift, and go to state 39

    const_expr          go to state 106
    const_val           go to state 41
    function_call_stmt  go to state 42


State 70

   23 const_expr: const_expr LE . const_expr

    LPAREN     shift, and go to state 31
    NOT        shift, and go to state 32
    SUB        shift, and go to state 33
    I_CONST    shift, and go to state 34
    F_CONST    shift, and go to state 35
    STR_CONST  shift, and go to state 36
    ID         shift, and go to state 37
    TRUE       shift, and go to state 38
    FALSE      shift, and go to state 39

    const_expr          go to state 107
    const_val           go to state 41
    function_call_stmt  go to state 42


State 71

   24 const_expr: const_expr EQ . const_expr

    LPAREN     shift, and go to state 31
    NOT        shift, and go to state 32
    SUB        shift, and go to state 33
    I_CONST    shift, and go to state 34
    F_CONST    shift, and go to state 35
    STR_CONST  shift, and go to state 36
    ID         shift, and go to state 37
    TRUE       shift, and go to state 38
    FALSE      shift, and go to state 39

    const_expr          go to state 108
    const_val           go to state 41
    function_call_stmt  go to state 42


State 72

   25 const_expr: const_expr GE . const_expr

    LPAREN     shift, and go to state 31
    NOT        shift, and go to state 32
    SUB        shift, and go to state 33
    I_CONST    shift, and go to state 34
    F_CONST    shift, and go to state 35
    STR_CONST  shift, and go to state 36
    ID         shift, and go to state 37
    TRUE       shift, and go to state 38
    FALSE      shift, and go to state 39

    const_expr          go to state 109
    const_val           go to state 41
    function_call_stmt  go to state 42


State 73

   26 const_expr: const_expr GT . const_expr

    LPAREN     shift, and go to state 31
    NOT        shift, and go to state 32
    SUB        shift, and go to state 33
    I_CONST    shift, and go to state 34
    F_CONST    shift, and go to state 35
    STR_CONST  shift, and go to state 36
    ID         shift, and go to state 37
    TRUE       shift, and go to state 38
    FALSE      shift, and go to state 39

    const_expr          go to state 110
    const_val           go to state 41
    function_call_stmt  go to state 42


State 74

   27 const_expr: const_expr NE . const_expr

    LPAREN     shift, and go to state 31
    NOT        shift, and go to state 32
    SUB        shift, and go to state 33
    I_CONST    shift, and go to state 34
    F_CONST    shift, and go to state 35
    STR_CONST  shift, and go to state 36
    ID         shift, and go to state 37
    TRUE       shift, and go to state 38
    FALSE      shift, and go to state 39

    const_expr          go to state 111
    const_val           go to state 41
    function_call_stmt  go to state 42


State 75

   18 const_expr: const_expr ADD . const_expr

    LPAREN     shift, and go to state 31
    NOT        shift, and go to state 32
    SUB        shift, and go to state 33
    I_CONST    shift, and go to state 34
    F_CONST    shift, and go to state 35
    STR_CONST  shift, and go to state 36
    ID         shift, and go to state 37
    TRUE       shift, and go to state 38
    FALSE      shift, and go to state 39

    const_expr          go to state 112
    const_val           go to state 41
    function_call_stmt  go to state 42


State 76

   19 const_expr: const_expr SUB . const_expr

    LPAREN     shift, and go to state 31
    NOT        shift, and go to state 32
    SUB        shift, and go to state 33
    I_CONST    shift, and go to state 34
    F_CONST    shift, and go to state 35
    STR_CONST  shift, and go to state 36
    ID         shift, and go to state 37
    TRUE       shift, and go to state 38
    FALSE      shift, and go to state 39

    const_expr          go to state 113
    const_val           go to state 41
    function_call_stmt  go to state 42


State 77

   16 const_expr: const_expr MUL . const_expr

    LPAREN     shift, and go to state 31
    NOT        shift, and go to state 32
    SUB        shift, and go to state 33
    I_CONST    shift, and go to state 34
    F_CONST    shift, and go to state 35
    STR_CONST  shift, and go to state 36
    ID         shift, and go to state 37
    TRUE       shift, and go to state 38
    FALSE      shift, and go to state 39

    const_expr          go to state 114
    const_val           go to state 41
    function_call_stmt  go to state 42


State 78

   17 const_expr: const_expr DIV . const_expr

    LPAREN     shift, and go to state 31
    NOT        shift, and go to state 32
    SUB        shift, and go to state 33
    I_CONST    shift, and go to state 34
    F_CONST    shift, and go to state 35
    STR_CONST  shift, and go to state 36
    ID         shift, and go to state 37
    TRUE       shift, and go to state 38
    FALSE      shift, and go to state 39

    const_expr          go to state 115
    const_val           go to state 41
    function_call_stmt  go to state 42


State 79

   15 const_expr: const_expr MOD . const_expr

    LPAREN     shift, and go to state 31
    NOT        shift, and go to state 32
    SUB        shift, and go to state 33
    I_CONST    shift, and go to state 34
    F_CONST    shift, and go to state 35
    STR_CONST  shift, and go to state 36
    ID         shift, and go to state 37
    TRUE       shift, and go to state 38
    FALSE      shift, and go to state 39

    const_expr          go to state 116
    const_val           go to state 41
    function_call_stmt  go to state 42


State 80

   55 block_program: variable_declaration . block_program

    PUT     shift, and go to state 1
    _BEGIN  shift, and go to state 2
    IF      shift, and go to state 3
    EXIT    shift, and go to state 4
    FOR     shift, and go to state 5
    GET     shift, and go to state 7
    LOOP    shift, and go to state 8
    RESULT  shift, and go to state 10
    RETURN  shift, and go to state 11
    SKIP    shift, and go to state 12
    VAR     shift, and go to state 13
    CONST   shift, and go to state 14
    ID      shift, and go to state 15

    $default  reduce using rule 57 (block_program)

    variable_declaration  go to state 80
    block_program         go to state 117
    stmt                  go to state 82
    block_stmt            go to state 21
    assign_stmt           go to state 22
    put_stmt              go to state 23
    get_stmt              go to state 24
    result_stmt           go to state 25
    exit_stmt             go to state 26
    skip_stmt             go to state 27
    if_stmt               go to state 28
    loop_stmt             go to state 29
    for_stmt              go to state 30


State 81

   69 block_stmt: _BEGIN $@5 block_program . END

    END  shift, and go to state 118


State 82

   56 block_program: stmt . block_program

    PUT     shift, and go to state 1
    _BEGIN  shift, and go to state 2
    IF      shift, and go to state 3
    EXIT    shift, and go to state 4
    FOR     shift, and go to state 5
    GET     shift, and go to state 7
    LOOP    shift, and go to state 8
    RESULT  shift, and go to state 10
    RETURN  shift, and go to state 11
    SKIP    shift, and go to state 12
    VAR     shift, and go to state 13
    CONST   shift, and go to state 14
    ID      shift, and go to state 15

    $default  reduce using rule 57 (block_program)

    variable_declaration  go to state 80
    block_program         go to state 119
    stmt                  go to state 82
    block_stmt            go to state 21
    assign_stmt           go to state 22
    put_stmt              go to state 23
    get_stmt              go to state 24
    result_stmt           go to state 25
    exit_stmt             go to state 26
    skip_stmt             go to state 27
    if_stmt               go to state 28
    loop_stmt             go to state 29
    for_stmt              go to state 30


State 83

   82 if_stmt: IF const_expr THEN . $@6 block_program $@7 end_if_stmt

    $default  reduce using rule 80 ($@6)

    $@6  go to state 120


State 84

   15 const_expr: const_expr . MOD const_expr
   16           | const_expr . MUL const_expr
   17           | const_expr . DIV const_expr
   18           | const_expr . ADD const_expr
   19           | const_expr . SUB const_expr
   20           | const_expr . AND const_expr
   21           | const_expr . OR const_expr
   22           | const_expr . LT const_expr
   23           | const_expr . LE const_expr
   24           | const_expr . EQ const_expr
   25           | const_expr . GE const_expr
   26           | const_expr . GT const_expr
   27           | const_expr . NE const_expr
   78 exit_stmt: EXIT WHEN const_expr .

    AND  shift, and go to state 67
    OR   shift, and go to state 68
    LT   shift, and go to state 69
    LE   shift, and go to state 70
    EQ   shift, and go to state 71
    GE   shift, and go to state 72
    GT   shift, and go to state 73
    NE   shift, and go to state 74
    ADD  shift, and go to state 75
    SUB  shift, and go to state 76
    MUL  shift, and go to state 77
    DIV  shift, and go to state 78
    MOD  shift, and go to state 79

    $default  reduce using rule 78 (exit_stmt)


State 85

   91 for_stmt: FOR DECREASING ID . $@11 COLON const_expr DOT DOT const_expr block_program END FOR

    $default  reduce using rule 90 ($@11)

    $@11  go to state 121


State 86

   89 for_stmt: FOR ID $@10 . COLON const_expr DOT DOT const_expr block_program END FOR

    COLON  shift, and go to state 122


State 87

   44 function_declaration: FUNCTION ID LPAREN . RPAREN COLON datatype $@1 block_program END ID
   46                     | FUNCTION ID LPAREN . para_declaration RPAREN COLON datatype $@2 block_program END ID

    RPAREN  shift, and go to state 123
    ID      shift, and go to state 124

    para_declaration  go to state 125


State 88

   74 get_stmt: GET ID LBRACKET . const_expr RBRACKET

    LPAREN     shift, and go to state 31
    NOT        shift, and go to state 32
    SUB        shift, and go to state 33
    I_CONST    shift, and go to state 34
    F_CONST    shift, and go to state 35
    STR_CONST  shift, and go to state 36
    ID         shift, and go to state 37
    TRUE       shift, and go to state 38
    FALSE      shift, and go to state 39

    const_expr          go to state 126
    const_val           go to state 41
    function_call_stmt  go to state 42


State 89

   87 loop_stmt: LOOP $@9 block_program . END LOOP

    END  shift, and go to state 127


State 90

   48 procedure_declaration: PROCEDURE ID LPAREN . RPAREN $@3 block_program END ID
   50                      | PROCEDURE ID LPAREN . para_declaration RPAREN $@4 block_program END ID

    RPAREN  shift, and go to state 128
    ID      shift, and go to state 124

    para_declaration  go to state 129


State 91

   11 var_variable_declaration: COLON . datatype
   12                         | COLON . datatype ASSIGN const_expr
   13                         | COLON . ARRAY I_CONST DOT DOT I_CONST OF datatype

    REAL    shift, and go to state 130
    INT     shift, and go to state 131
    STRING  shift, and go to state 132
    ARRAY   shift, and go to state 133
    BOOL    shift, and go to state 134

    datatype  go to state 135


State 92

   10 var_variable_declaration: ASSIGN . const_expr

    LPAREN     shift, and go to state 31
    NOT        shift, and go to state 32
    SUB        shift, and go to state 33
    I_CONST    shift, and go to state 34
    F_CONST    shift, and go to state 35
    STR_CONST  shift, and go to state 36
    ID         shift, and go to state 37
    TRUE       shift, and go to state 38
    FALSE      shift, and go to state 39

    const_expr          go to state 136
    const_val           go to state 41
    function_call_stmt  go to state 42


State 93

    7 variable_declaration: VAR ID var_variable_declaration .

    $default  reduce using rule 7 (variable_declaration)


State 94

    9 const_variable_declaration: COLON . datatype ASSIGN const_expr

    REAL    shift, and go to state 130
    INT     shift, and go to state 131
    STRING  shift, and go to state 132
    BOOL    shift, and go to state 134

    datatype  go to state 137


State 95

    8 const_variable_declaration: ASSIGN . const_expr

    LPAREN     shift, and go to state 31
    NOT        shift, and go to state 32
    SUB        shift, and go to state 33
    I_CONST    shift, and go to state 34
    F_CONST    shift, and go to state 35
    STR_CONST  shift, and go to state 36
    ID         shift, and go to state 37
    TRUE       shift, and go to state 38
    FALSE      shift, and go to state 39

    const_expr          go to state 138
    const_val           go to state 41
    function_call_stmt  go to state 42


State 96

    6 variable_declaration: CONST ID const_variable_declaration .

    $default  reduce using rule 6 (variable_declaration)


State 97

   15 const_expr: const_expr . MOD const_expr
   16           | const_expr . MUL const_expr
   17           | const_expr . DIV const_expr
   18           | const_expr . ADD const_expr
   19           | const_expr . SUB const_expr
   20           | const_expr . AND const_expr
   21           | const_expr . OR const_expr
   22           | const_expr . LT const_expr
   23           | const_expr . LE const_expr
   24           | const_expr . EQ const_expr
   25           | const_expr . GE const_expr
   26           | const_expr . GT const_expr
   27           | const_expr . NE const_expr
   71 assign_stmt: ID LBRACKET const_expr . RBRACKET ASSIGN const_expr

    RBRACKET  shift, and go to state 139
    AND       shift, and go to state 67
    OR        shift, and go to state 68
    LT        shift, and go to state 69
    LE        shift, and go to state 70
    EQ        shift, and go to state 71
    GE        shift, and go to state 72
    GT        shift, and go to state 73
    NE        shift, and go to state 74
    ADD       shift, and go to state 75
    SUB       shift, and go to state 76
    MUL       shift, and go to state 77
    DIV       shift, and go to state 78
    MOD       shift, and go to state 79


State 98

   15 const_expr: const_expr . MOD const_expr
   16           | const_expr . MUL const_expr
   17           | const_expr . DIV const_expr
   18           | const_expr . ADD const_expr
   19           | const_expr . SUB const_expr
   20           | const_expr . AND const_expr
   21           | const_expr . OR const_expr
   22           | const_expr . LT const_expr
   23           | const_expr . LE const_expr
   24           | const_expr . EQ const_expr
   25           | const_expr . GE const_expr
   26           | const_expr . GT const_expr
   27           | const_expr . NE const_expr
   70 assign_stmt: ID ASSIGN const_expr .

    AND  shift, and go to state 67
    OR   shift, and go to state 68
    LT   shift, and go to state 69
    LE   shift, and go to state 70
    EQ   shift, and go to state 71
    GE   shift, and go to state 72
    GT   shift, and go to state 73
    NE   shift, and go to state 74
    ADD  shift, and go to state 75
    SUB  shift, and go to state 76
    MUL  shift, and go to state 77
    DIV  shift, and go to state 78
    MOD  shift, and go to state 79

    $default  reduce using rule 70 (assign_stmt)


State 99

   30 const_expr: LPAREN const_expr RPAREN .

    $default  reduce using rule 30 (const_expr)


State 100

   92 function_call_stmt: ID LPAREN RPAREN .

    $default  reduce using rule 92 (function_call_stmt)


State 101

   15 const_expr: const_expr . MOD const_expr
   16           | const_expr . MUL const_expr
   17           | const_expr . DIV const_expr
   18           | const_expr . ADD const_expr
   19           | const_expr . SUB const_expr
   20           | const_expr . AND const_expr
   21           | const_expr . OR const_expr
   22           | const_expr . LT const_expr
   23           | const_expr . LE const_expr
   24           | const_expr . EQ const_expr
   25           | const_expr . GE const_expr
   26           | const_expr . GT const_expr
   27           | const_expr . NE const_expr
   94 function_call_para: const_expr .
   95                   | const_expr . COMMA function_call_para

    COMMA  shift, and go to state 140
    AND    shift, and go to state 67
    OR     shift, and go to state 68
    LT     shift, and go to state 69
    LE     shift, and go to state 70
    EQ     shift, and go to state 71
    GE     shift, and go to state 72
    GT     shift, and go to state 73
    NE     shift, and go to state 74
    ADD    shift, and go to state 75
    SUB    shift, and go to state 76
    MUL    shift, and go to state 77
    DIV    shift, and go to state 78
    MOD    shift, and go to state 79

    $default  reduce using rule 94 (function_call_para)


State 102

   93 function_call_stmt: ID LPAREN function_call_para . RPAREN

    RPAREN  shift, and go to state 141


State 103

   15 const_expr: const_expr . MOD const_expr
   16           | const_expr . MUL const_expr
   17           | const_expr . DIV const_expr
   18           | const_expr . ADD const_expr
   19           | const_expr . SUB const_expr
   20           | const_expr . AND const_expr
   21           | const_expr . OR const_expr
   22           | const_expr . LT const_expr
   23           | const_expr . LE const_expr
   24           | const_expr . EQ const_expr
   25           | const_expr . GE const_expr
   26           | const_expr . GT const_expr
   27           | const_expr . NE const_expr
   35 const_val: ID LBRACKET const_expr . RBRACKET

    RBRACKET  shift, and go to state 142
    AND       shift, and go to state 67
    OR        shift, and go to state 68
    LT        shift, and go to state 69
    LE        shift, and go to state 70
    EQ        shift, and go to state 71
    GE        shift, and go to state 72
    GT        shift, and go to state 73
    NE        shift, and go to state 74
    ADD       shift, and go to state 75
    SUB       shift, and go to state 76
    MUL       shift, and go to state 77
    DIV       shift, and go to state 78
    MOD       shift, and go to state 79


State 104

   15 const_expr: const_expr . MOD const_expr
   16           | const_expr . MUL const_expr
   17           | const_expr . DIV const_expr
   18           | const_expr . ADD const_expr
   19           | const_expr . SUB const_expr
   20           | const_expr . AND const_expr
   20           | const_expr AND const_expr .
   21           | const_expr . OR const_expr
   22           | const_expr . LT const_expr
   23           | const_expr . LE const_expr
   24           | const_expr . EQ const_expr
   25           | const_expr . GE const_expr
   26           | const_expr . GT const_expr
   27           | const_expr . NE const_expr

    LT   shift, and go to state 69
    LE   shift, and go to state 70
    EQ   shift, and go to state 71
    GE   shift, and go to state 72
    GT   shift, and go to state 73
    NE   shift, and go to state 74
    ADD  shift, and go to state 75
    SUB  shift, and go to state 76
    MUL  shift, and go to state 77
    DIV  shift, and go to state 78
    MOD  shift, and go to state 79

    $default  reduce using rule 20 (const_expr)


State 105

   15 const_expr: const_expr . MOD const_expr
   16           | const_expr . MUL const_expr
   17           | const_expr . DIV const_expr
   18           | const_expr . ADD const_expr
   19           | const_expr . SUB const_expr
   20           | const_expr . AND const_expr
   21           | const_expr . OR const_expr
   21           | const_expr OR const_expr .
   22           | const_expr . LT const_expr
   23           | const_expr . LE const_expr
   24           | const_expr . EQ const_expr
   25           | const_expr . GE const_expr
   26           | const_expr . GT const_expr
   27           | const_expr . NE const_expr

    LT   shift, and go to state 69
    LE   shift, and go to state 70
    EQ   shift, and go to state 71
    GE   shift, and go to state 72
    GT   shift, and go to state 73
    NE   shift, and go to state 74
    ADD  shift, and go to state 75
    SUB  shift, and go to state 76
    MUL  shift, and go to state 77
    DIV  shift, and go to state 78
    MOD  shift, and go to state 79

    $default  reduce using rule 21 (const_expr)


State 106

   15 const_expr: const_expr . MOD const_expr
   16           | const_expr . MUL const_expr
   17           | const_expr . DIV const_expr
   18           | const_expr . ADD const_expr
   19           | const_expr . SUB const_expr
   20           | const_expr . AND const_expr
   21           | const_expr . OR const_expr
   22           | const_expr . LT const_expr
   22           | const_expr LT const_expr .
   23           | const_expr . LE const_expr
   24           | const_expr . EQ const_expr
   25           | const_expr . GE const_expr
   26           | const_expr . GT const_expr
   27           | const_expr . NE const_expr

    ADD  shift, and go to state 75
    SUB  shift, and go to state 76
    MUL  shift, and go to state 77
    DIV  shift, and go to state 78
    MOD  shift, and go to state 79

    $default  reduce using rule 22 (const_expr)


State 107

   15 const_expr: const_expr . MOD const_expr
   16           | const_expr . MUL const_expr
   17           | const_expr . DIV const_expr
   18           | const_expr . ADD const_expr
   19           | const_expr . SUB const_expr
   20           | const_expr . AND const_expr
   21           | const_expr . OR const_expr
   22           | const_expr . LT const_expr
   23           | const_expr . LE const_expr
   23           | const_expr LE const_expr .
   24           | const_expr . EQ const_expr
   25           | const_expr . GE const_expr
   26           | const_expr . GT const_expr
   27           | const_expr . NE const_expr

    ADD  shift, and go to state 75
    SUB  shift, and go to state 76
    MUL  shift, and go to state 77
    DIV  shift, and go to state 78
    MOD  shift, and go to state 79

    $default  reduce using rule 23 (const_expr)


State 108

   15 const_expr: const_expr . MOD const_expr
   16           | const_expr . MUL const_expr
   17           | const_expr . DIV const_expr
   18           | const_expr . ADD const_expr
   19           | const_expr . SUB const_expr
   20           | const_expr . AND const_expr
   21           | const_expr . OR const_expr
   22           | const_expr . LT const_expr
   23           | const_expr . LE const_expr
   24           | const_expr . EQ const_expr
   24           | const_expr EQ const_expr .
   25           | const_expr . GE const_expr
   26           | const_expr . GT const_expr
   27           | const_expr . NE const_expr

    ADD  shift, and go to state 75
    SUB  shift, and go to state 76
    MUL  shift, and go to state 77
    DIV  shift, and go to state 78
    MOD  shift, and go to state 79

    $default  reduce using rule 24 (const_expr)


State 109

   15 const_expr: const_expr . MOD const_expr
   16           | const_expr . MUL const_expr
   17           | const_expr . DIV const_expr
   18           | const_expr . ADD const_expr
   19           | const_expr . SUB const_expr
   20           | const_expr . AND const_expr
   21           | const_expr . OR const_expr
   22           | const_expr . LT const_expr
   23           | const_expr . LE const_expr
   24           | const_expr . EQ const_expr
   25           | const_expr . GE const_expr
   25           | const_expr GE const_expr .
   26           | const_expr . GT const_expr
   27           | const_expr . NE const_expr

    ADD  shift, and go to state 75
    SUB  shift, and go to state 76
    MUL  shift, and go to state 77
    DIV  shift, and go to state 78
    MOD  shift, and go to state 79

    $default  reduce using rule 25 (const_expr)


State 110

   15 const_expr: const_expr . MOD const_expr
   16           | const_expr . MUL const_expr
   17           | const_expr . DIV const_expr
   18           | const_expr . ADD const_expr
   19           | const_expr . SUB const_expr
   20           | const_expr . AND const_expr
   21           | const_expr . OR const_expr
   22           | const_expr . LT const_expr
   23           | const_expr . LE const_expr
   24           | const_expr . EQ const_expr
   25           | const_expr . GE const_expr
   26           | const_expr . GT const_expr
   26           | const_expr GT const_expr .
   27           | const_expr . NE const_expr

    ADD  shift, and go to state 75
    SUB  shift, and go to state 76
    MUL  shift, and go to state 77
    DIV  shift, and go to state 78
    MOD  shift, and go to state 79

    $default  reduce using rule 26 (const_expr)


State 111

   15 const_expr: const_expr . MOD const_expr
   16           | const_expr . MUL const_expr
   17           | const_expr . DIV const_expr
   18           | const_expr . ADD const_expr
   19           | const_expr . SUB const_expr
   20           | const_expr . AND const_expr
   21           | const_expr . OR const_expr
   22           | const_expr . LT const_expr
   23           | const_expr . LE const_expr
   24           | const_expr . EQ const_expr
   25           | const_expr . GE const_expr
   26           | const_expr . GT const_expr
   27           | const_expr . NE const_expr
   27           | const_expr NE const_expr .

    ADD  shift, and go to state 75
    SUB  shift, and go to state 76
    MUL  shift, and go to state 77
    DIV  shift, and go to state 78
    MOD  shift, and go to state 79

    $default  reduce using rule 27 (const_expr)


State 112

   15 const_expr: const_expr . MOD const_expr
   16           | const_expr . MUL const_expr
   17           | const_expr . DIV const_expr
   18           | const_expr . ADD const_expr
   18           | const_expr ADD const_expr .
   19           | const_expr . SUB const_expr
   20           | const_expr . AND const_expr
   21           | const_expr . OR const_expr
   22           | const_expr . LT const_expr
   23           | const_expr . LE const_expr
   24           | const_expr . EQ const_expr
   25           | const_expr . GE const_expr
   26           | const_expr . GT const_expr
   27           | const_expr . NE const_expr

    MUL  shift, and go to state 77
    DIV  shift, and go to state 78
    MOD  shift, and go to state 79

    $default  reduce using rule 18 (const_expr)


State 113

   15 const_expr: const_expr . MOD const_expr
   16           | const_expr . MUL const_expr
   17           | const_expr . DIV const_expr
   18           | const_expr . ADD const_expr
   19           | const_expr . SUB const_expr
   19           | const_expr SUB const_expr .
   20           | const_expr . AND const_expr
   21           | const_expr . OR const_expr
   22           | const_expr . LT const_expr
   23           | const_expr . LE const_expr
   24           | const_expr . EQ const_expr
   25           | const_expr . GE const_expr
   26           | const_expr . GT const_expr
   27           | const_expr . NE const_expr

    MUL  shift, and go to state 77
    DIV  shift, and go to state 78
    MOD  shift, and go to state 79

    $default  reduce using rule 19 (const_expr)


State 114

   15 const_expr: const_expr . MOD const_expr
   16           | const_expr . MUL const_expr
   16           | const_expr MUL const_expr .
   17           | const_expr . DIV const_expr
   18           | const_expr . ADD const_expr
   19           | const_expr . SUB const_expr
   20           | const_expr . AND const_expr
   21           | const_expr . OR const_expr
   22           | const_expr . LT const_expr
   23           | const_expr . LE const_expr
   24           | const_expr . EQ const_expr
   25           | const_expr . GE const_expr
   26           | const_expr . GT const_expr
   27           | const_expr . NE const_expr

    $default  reduce using rule 16 (const_expr)


State 115

   15 const_expr: const_expr . MOD const_expr
   16           | const_expr . MUL const_expr
   17           | const_expr . DIV const_expr
   17           | const_expr DIV const_expr .
   18           | const_expr . ADD const_expr
   19           | const_expr . SUB const_expr
   20           | const_expr . AND const_expr
   21           | const_expr . OR const_expr
   22           | const_expr . LT const_expr
   23           | const_expr . LE const_expr
   24           | const_expr . EQ const_expr
   25           | const_expr . GE const_expr
   26           | const_expr . GT const_expr
   27           | const_expr . NE const_expr

    $default  reduce using rule 17 (const_expr)


State 116

   15 const_expr: const_expr . MOD const_expr
   15           | const_expr MOD const_expr .
   16           | const_expr . MUL const_expr
   17           | const_expr . DIV const_expr
   18           | const_expr . ADD const_expr
   19           | const_expr . SUB const_expr
   20           | const_expr . AND const_expr
   21           | const_expr . OR const_expr
   22           | const_expr . LT const_expr
   23           | const_expr . LE const_expr
   24           | const_expr . EQ const_expr
   25           | const_expr . GE const_expr
   26           | const_expr . GT const_expr
   27           | const_expr . NE const_expr

    $default  reduce using rule 15 (const_expr)


State 117

   55 block_program: variable_declaration block_program .

    $default  reduce using rule 55 (block_program)


State 118

   69 block_stmt: _BEGIN $@5 block_program END .

    $default  reduce using rule 69 (block_stmt)


State 119

   56 block_program: stmt block_program .

    $default  reduce using rule 56 (block_program)


State 120

   82 if_stmt: IF const_expr THEN $@6 . block_program $@7 end_if_stmt

    PUT     shift, and go to state 1
    _BEGIN  shift, and go to state 2
    IF      shift, and go to state 3
    EXIT    shift, and go to state 4
    FOR     shift, and go to state 5
    GET     shift, and go to state 7
    LOOP    shift, and go to state 8
    RESULT  shift, and go to state 10
    RETURN  shift, and go to state 11
    SKIP    shift, and go to state 12
    VAR     shift, and go to state 13
    CONST   shift, and go to state 14
    ID      shift, and go to state 15

    $default  reduce using rule 57 (block_program)

    variable_declaration  go to state 80
    block_program         go to state 143
    stmt                  go to state 82
    block_stmt            go to state 21
    assign_stmt           go to state 22
    put_stmt              go to state 23
    get_stmt              go to state 24
    result_stmt           go to state 25
    exit_stmt             go to state 26
    skip_stmt             go to state 27
    if_stmt               go to state 28
    loop_stmt             go to state 29
    for_stmt              go to state 30


State 121

   91 for_stmt: FOR DECREASING ID $@11 . COLON const_expr DOT DOT const_expr block_program END FOR

    COLON  shift, and go to state 144


State 122

   89 for_stmt: FOR ID $@10 COLON . const_expr DOT DOT const_expr block_program END FOR

    LPAREN     shift, and go to state 31
    NOT        shift, and go to state 32
    SUB        shift, and go to state 33
    I_CONST    shift, and go to state 34
    F_CONST    shift, and go to state 35
    STR_CONST  shift, and go to state 36
    ID         shift, and go to state 37
    TRUE       shift, and go to state 38
    FALSE      shift, and go to state 39

    const_expr          go to state 145
    const_val           go to state 41
    function_call_stmt  go to state 42


State 123

   44 function_declaration: FUNCTION ID LPAREN RPAREN . COLON datatype $@1 block_program END ID

    COLON  shift, and go to state 146


State 124

   51 para_declaration: ID . COLON datatype
   52                 | ID . COLON datatype COMMA para_declaration
   53                 | ID . COLON ARRAY I_CONST DOT DOT I_CONST OF datatype
   54                 | ID . COLON ARRAY I_CONST DOT DOT I_CONST OF datatype COMMA para_declaration

    COLON  shift, and go to state 147


State 125

   46 function_declaration: FUNCTION ID LPAREN para_declaration . RPAREN COLON datatype $@2 block_program END ID

    RPAREN  shift, and go to state 148


State 126

   15 const_expr: const_expr . MOD const_expr
   16           | const_expr . MUL const_expr
   17           | const_expr . DIV const_expr
   18           | const_expr . ADD const_expr
   19           | const_expr . SUB const_expr
   20           | const_expr . AND const_expr
   21           | const_expr . OR const_expr
   22           | const_expr . LT const_expr
   23           | const_expr . LE const_expr
   24           | const_expr . EQ const_expr
   25           | const_expr . GE const_expr
   26           | const_expr . GT const_expr
   27           | const_expr . NE const_expr
   74 get_stmt: GET ID LBRACKET const_expr . RBRACKET

    RBRACKET  shift, and go to state 149
    AND       shift, and go to state 67
    OR        shift, and go to state 68
    LT        shift, and go to state 69
    LE        shift, and go to state 70
    EQ        shift, and go to state 71
    GE        shift, and go to state 72
    GT        shift, and go to state 73
    NE        shift, and go to state 74
    ADD       shift, and go to state 75
    SUB       shift, and go to state 76
    MUL       shift, and go to state 77
    DIV       shift, and go to state 78
    MOD       shift, and go to state 79


State 127

   87 loop_stmt: LOOP $@9 block_program END . LOOP

    LOOP  shift, and go to state 150


State 128

   48 procedure_declaration: PROCEDURE ID LPAREN RPAREN . $@3 block_program END ID

    $default  reduce using rule 47 ($@3)

    $@3  go to state 151


State 129

   50 procedure_declaration: PROCEDURE ID LPAREN para_declaration . RPAREN $@4 block_program END ID

    RPAREN  shift, and go to state 152


State 130

   40 datatype: REAL .

    $default  reduce using rule 40 (datatype)


State 131

   39 datatype: INT .

    $default  reduce using rule 39 (datatype)


State 132

   41 datatype: STRING .

    $default  reduce using rule 41 (datatype)


State 133

   13 var_variable_declaration: COLON ARRAY . I_CONST DOT DOT I_CONST OF datatype

    I_CONST  shift, and go to state 153


State 134

   42 datatype: BOOL .

    $default  reduce using rule 42 (datatype)


State 135

   11 var_variable_declaration: COLON datatype .
   12                         | COLON datatype . ASSIGN const_expr

    ASSIGN  shift, and go to state 154

    $default  reduce using rule 11 (var_variable_declaration)


State 136

   10 var_variable_declaration: ASSIGN const_expr .
   15 const_expr: const_expr . MOD const_expr
   16           | const_expr . MUL const_expr
   17           | const_expr . DIV const_expr
   18           | const_expr . ADD const_expr
   19           | const_expr . SUB const_expr
   20           | const_expr . AND const_expr
   21           | const_expr . OR const_expr
   22           | const_expr . LT const_expr
   23           | const_expr . LE const_expr
   24           | const_expr . EQ const_expr
   25           | const_expr . GE const_expr
   26           | const_expr . GT const_expr
   27           | const_expr . NE const_expr

    AND  shift, and go to state 67
    OR   shift, and go to state 68
    LT   shift, and go to state 69
    LE   shift, and go to state 70
    EQ   shift, and go to state 71
    GE   shift, and go to state 72
    GT   shift, and go to state 73
    NE   shift, and go to state 74
    ADD  shift, and go to state 75
    SUB  shift, and go to state 76
    MUL  shift, and go to state 77
    DIV  shift, and go to state 78
    MOD  shift, and go to state 79

    $default  reduce using rule 10 (var_variable_declaration)


State 137

    9 const_variable_declaration: COLON datatype . ASSIGN const_expr

    ASSIGN  shift, and go to state 155


State 138

    8 const_variable_declaration: ASSIGN const_expr .
   15 const_expr: const_expr . MOD const_expr
   16           | const_expr . MUL const_expr
   17           | const_expr . DIV const_expr
   18           | const_expr . ADD const_expr
   19           | const_expr . SUB const_expr
   20           | const_expr . AND const_expr
   21           | const_expr . OR const_expr
   22           | const_expr . LT const_expr
   23           | const_expr . LE const_expr
   24           | const_expr . EQ const_expr
   25           | const_expr . GE const_expr
   26           | const_expr . GT const_expr
   27           | const_expr . NE const_expr

    AND  shift, and go to state 67
    OR   shift, and go to state 68
    LT   shift, and go to state 69
    LE   shift, and go to state 70
    EQ   shift, and go to state 71
    GE   shift, and go to state 72
    GT   shift, and go to state 73
    NE   shift, and go to state 74
    ADD  shift, and go to state 75
    SUB  shift, and go to state 76
    MUL  shift, and go to state 77
    DIV  shift, and go to state 78
    MOD  shift, and go to state 79

    $default  reduce using rule 8 (const_variable_declaration)


State 139

   71 assign_stmt: ID LBRACKET const_expr RBRACKET . ASSIGN const_expr

    ASSIGN  shift, and go to state 156


State 140

   95 function_call_para: const_expr COMMA . function_call_para

    LPAREN     shift, and go to state 31
    NOT        shift, and go to state 32
    SUB        shift, and go to state 33
    I_CONST    shift, and go to state 34
    F_CONST    shift, and go to state 35
    STR_CONST  shift, and go to state 36
    ID         shift, and go to state 37
    TRUE       shift, and go to state 38
    FALSE      shift, and go to state 39

    const_expr          go to state 101
    const_val           go to state 41
    function_call_stmt  go to state 42
    function_call_para  go to state 157


State 141

   93 function_call_stmt: ID LPAREN function_call_para RPAREN .

    $default  reduce using rule 93 (function_call_stmt)


State 142

   35 const_val: ID LBRACKET const_expr RBRACKET .

    $default  reduce using rule 35 (const_val)


State 143

   82 if_stmt: IF const_expr THEN $@6 block_program . $@7 end_if_stmt

    $default  reduce using rule 81 ($@7)

    $@7  go to state 158


State 144

   91 for_stmt: FOR DECREASING ID $@11 COLON . const_expr DOT DOT const_expr block_program END FOR

    LPAREN     shift, and go to state 31
    NOT        shift, and go to state 32
    SUB        shift, and go to state 33
    I_CONST    shift, and go to state 34
    F_CONST    shift, and go to state 35
    STR_CONST  shift, and go to state 36
    ID         shift, and go to state 37
    TRUE       shift, and go to state 38
    FALSE      shift, and go to state 39

    const_expr          go to state 159
    const_val           go to state 41
    function_call_stmt  go to state 42


State 145

   15 const_expr: const_expr . MOD const_expr
   16           | const_expr . MUL const_expr
   17           | const_expr . DIV const_expr
   18           | const_expr . ADD const_expr
   19           | const_expr . SUB const_expr
   20           | const_expr . AND const_expr
   21           | const_expr . OR const_expr
   22           | const_expr . LT const_expr
   23           | const_expr . LE const_expr
   24           | const_expr . EQ const_expr
   25           | const_expr . GE const_expr
   26           | const_expr . GT const_expr
   27           | const_expr . NE const_expr
   89 for_stmt: FOR ID $@10 COLON const_expr . DOT DOT const_expr block_program END FOR

    DOT  shift, and go to state 160
    AND  shift, and go to state 67
    OR   shift, and go to state 68
    LT   shift, and go to state 69
    LE   shift, and go to state 70
    EQ   shift, and go to state 71
    GE   shift, and go to state 72
    GT   shift, and go to state 73
    NE   shift, and go to state 74
    ADD  shift, and go to state 75
    SUB  shift, and go to state 76
    MUL  shift, and go to state 77
    DIV  shift, and go to state 78
    MOD  shift, and go to state 79


State 146

   44 function_declaration: FUNCTION ID LPAREN RPAREN COLON . datatype $@1 block_program END ID

    REAL    shift, and go to state 130
    INT     shift, and go to state 131
    STRING  shift, and go to state 132
    BOOL    shift, and go to state 134

    datatype  go to state 161


State 147

   51 para_declaration: ID COLON . datatype
   52                 | ID COLON . datatype COMMA para_declaration
   53                 | ID COLON . ARRAY I_CONST DOT DOT I_CONST OF datatype
   54                 | ID COLON . ARRAY I_CONST DOT DOT I_CONST OF datatype COMMA para_declaration

    REAL    shift, and go to state 130
    INT     shift, and go to state 131
    STRING  shift, and go to state 132
    ARRAY   shift, and go to state 162
    BOOL    shift, and go to state 134

    datatype  go to state 163


State 148

   46 function_declaration: FUNCTION ID LPAREN para_declaration RPAREN . COLON datatype $@2 block_program END ID

    COLON  shift, and go to state 164


State 149

   74 get_stmt: GET ID LBRACKET const_expr RBRACKET .

    $default  reduce using rule 74 (get_stmt)


State 150

   87 loop_stmt: LOOP $@9 block_program END LOOP .

    $default  reduce using rule 87 (loop_stmt)


State 151

   48 procedure_declaration: PROCEDURE ID LPAREN RPAREN $@3 . block_program END ID

    PUT     shift, and go to state 1
    _BEGIN  shift, and go to state 2
    IF      shift, and go to state 3
    EXIT    shift, and go to state 4
    FOR     shift, and go to state 5
    GET     shift, and go to state 7
    LOOP    shift, and go to state 8
    RESULT  shift, and go to state 10
    RETURN  shift, and go to state 11
    SKIP    shift, and go to state 12
    VAR     shift, and go to state 13
    CONST   shift, and go to state 14
    ID      shift, and go to state 15

    $default  reduce using rule 57 (block_program)

    variable_declaration  go to state 80
    block_program         go to state 165
    stmt                  go to state 82
    block_stmt            go to state 21
    assign_stmt           go to state 22
    put_stmt              go to state 23
    get_stmt              go to state 24
    result_stmt           go to state 25
    exit_stmt             go to state 26
    skip_stmt             go to state 27
    if_stmt               go to state 28
    loop_stmt             go to state 29
    for_stmt              go to state 30


State 152

   50 procedure_declaration: PROCEDURE ID LPAREN para_declaration RPAREN . $@4 block_program END ID

    $default  reduce using rule 49 ($@4)

    $@4  go to state 166


State 153

   13 var_variable_declaration: COLON ARRAY I_CONST . DOT DOT I_CONST OF datatype

    DOT  shift, and go to state 167


State 154

   12 var_variable_declaration: COLON datatype ASSIGN . const_expr

    LPAREN     shift, and go to state 31
    NOT        shift, and go to state 32
    SUB        shift, and go to state 33
    I_CONST    shift, and go to state 34
    F_CONST    shift, and go to state 35
    STR_CONST  shift, and go to state 36
    ID         shift, and go to state 37
    TRUE       shift, and go to state 38
    FALSE      shift, and go to state 39

    const_expr          go to state 168
    const_val           go to state 41
    function_call_stmt  go to state 42


State 155

    9 const_variable_declaration: COLON datatype ASSIGN . const_expr

    LPAREN     shift, and go to state 31
    NOT        shift, and go to state 32
    SUB        shift, and go to state 33
    I_CONST    shift, and go to state 34
    F_CONST    shift, and go to state 35
    STR_CONST  shift, and go to state 36
    ID         shift, and go to state 37
    TRUE       shift, and go to state 38
    FALSE      shift, and go to state 39

    const_expr          go to state 169
    const_val           go to state 41
    function_call_stmt  go to state 42


State 156

   71 assign_stmt: ID LBRACKET const_expr RBRACKET ASSIGN . const_expr

    LPAREN     shift, and go to state 31
    NOT        shift, and go to state 32
    SUB        shift, and go to state 33
    I_CONST    shift, and go to state 34
    F_CONST    shift, and go to state 35
    STR_CONST  shift, and go to state 36
    ID         shift, and go to state 37
    TRUE       shift, and go to state 38
    FALSE      shift, and go to state 39

    const_expr          go to state 170
    const_val           go to state 41
    function_call_stmt  go to state 42


State 157

   95 function_call_para: const_expr COMMA function_call_para .

    $default  reduce using rule 95 (function_call_para)


State 158

   82 if_stmt: IF const_expr THEN $@6 block_program $@7 . end_if_stmt

    ELSE  shift, and go to state 171
    END   shift, and go to state 172

    end_if_stmt  go to state 173


State 159

   15 const_expr: const_expr . MOD const_expr
   16           | const_expr . MUL const_expr
   17           | const_expr . DIV const_expr
   18           | const_expr . ADD const_expr
   19           | const_expr . SUB const_expr
   20           | const_expr . AND const_expr
   21           | const_expr . OR const_expr
   22           | const_expr . LT const_expr
   23           | const_expr . LE const_expr
   24           | const_expr . EQ const_expr
   25           | const_expr . GE const_expr
   26           | const_expr . GT const_expr
   27           | const_expr . NE const_expr
   91 for_stmt: FOR DECREASING ID $@11 COLON const_expr . DOT DOT const_expr block_program END FOR

    DOT  shift, and go to state 174
    AND  shift, and go to state 67
    OR   shift, and go to state 68
    LT   shift, and go to state 69
    LE   shift, and go to state 70
    EQ   shift, and go to state 71
    GE   shift, and go to state 72
    GT   shift, and go to state 73
    NE   shift, and go to state 74
    ADD  shift, and go to state 75
    SUB  shift, and go to state 76
    MUL  shift, and go to state 77
    DIV  shift, and go to state 78
    MOD  shift, and go to state 79


State 160

   89 for_stmt: FOR ID $@10 COLON const_expr DOT . DOT const_expr block_program END FOR

    DOT  shift, and go to state 175


State 161

   44 function_declaration: FUNCTION ID LPAREN RPAREN COLON datatype . $@1 block_program END ID

    $default  reduce using rule 43 ($@1)

    $@1  go to state 176


State 162

   53 para_declaration: ID COLON ARRAY . I_CONST DOT DOT I_CONST OF datatype
   54                 | ID COLON ARRAY . I_CONST DOT DOT I_CONST OF datatype COMMA para_declaration

    I_CONST  shift, and go to state 177


State 163

   51 para_declaration: ID COLON datatype .
   52                 | ID COLON datatype . COMMA para_declaration

    COMMA  shift, and go to state 178

    $default  reduce using rule 51 (para_declaration)


State 164

   46 function_declaration: FUNCTION ID LPAREN para_declaration RPAREN COLON . datatype $@2 block_program END ID

    REAL    shift, and go to state 130
    INT     shift, and go to state 131
    STRING  shift, and go to state 132
    BOOL    shift, and go to state 134

    datatype  go to state 179


State 165

   48 procedure_declaration: PROCEDURE ID LPAREN RPAREN $@3 block_program . END ID

    END  shift, and go to state 180


State 166

   50 procedure_declaration: PROCEDURE ID LPAREN para_declaration RPAREN $@4 . block_program END ID

    PUT     shift, and go to state 1
    _BEGIN  shift, and go to state 2
    IF      shift, and go to state 3
    EXIT    shift, and go to state 4
    FOR     shift, and go to state 5
    GET     shift, and go to state 7
    LOOP    shift, and go to state 8
    RESULT  shift, and go to state 10
    RETURN  shift, and go to state 11
    SKIP    shift, and go to state 12
    VAR     shift, and go to state 13
    CONST   shift, and go to state 14
    ID      shift, and go to state 15

    $default  reduce using rule 57 (block_program)

    variable_declaration  go to state 80
    block_program         go to state 181
    stmt                  go to state 82
    block_stmt            go to state 21
    assign_stmt           go to state 22
    put_stmt              go to state 23
    get_stmt              go to state 24
    result_stmt           go to state 25
    exit_stmt             go to state 26
    skip_stmt             go to state 27
    if_stmt               go to state 28
    loop_stmt             go to state 29
    for_stmt              go to state 30


State 167

   13 var_variable_declaration: COLON ARRAY I_CONST DOT . DOT I_CONST OF datatype

    DOT  shift, and go to state 182


State 168

   12 var_variable_declaration: COLON datatype ASSIGN const_expr .
   15 const_expr: const_expr . MOD const_expr
   16           | const_expr . MUL const_expr
   17           | const_expr . DIV const_expr
   18           | const_expr . ADD const_expr
   19           | const_expr . SUB const_expr
   20           | const_expr . AND const_expr
   21           | const_expr . OR const_expr
   22           | const_expr . LT const_expr
   23           | const_expr . LE const_expr
   24           | const_expr . EQ const_expr
   25           | const_expr . GE const_expr
   26           | const_expr . GT const_expr
   27           | const_expr . NE const_expr

    AND  shift, and go to state 67
    OR   shift, and go to state 68
    LT   shift, and go to state 69
    LE   shift, and go to state 70
    EQ   shift, and go to state 71
    GE   shift, and go to state 72
    GT   shift, and go to state 73
    NE   shift, and go to state 74
    ADD  shift, and go to state 75
    SUB  shift, and go to state 76
    MUL  shift, and go to state 77
    DIV  shift, and go to state 78
    MOD  shift, and go to state 79

    $default  reduce using rule 12 (var_variable_declaration)


State 169

    9 const_variable_declaration: COLON datatype ASSIGN const_expr .
   15 const_expr: const_expr . MOD const_expr
   16           | const_expr . MUL const_expr
   17           | const_expr . DIV const_expr
   18           | const_expr . ADD const_expr
   19           | const_expr . SUB const_expr
   20           | const_expr . AND const_expr
   21           | const_expr . OR const_expr
   22           | const_expr . LT const_expr
   23           | const_expr . LE const_expr
   24           | const_expr . EQ const_expr
   25           | const_expr . GE const_expr
   26           | const_expr . GT const_expr
   27           | const_expr . NE const_expr

    AND  shift, and go to state 67
    OR   shift, and go to state 68
    LT   shift, and go to state 69
    LE   shift, and go to state 70
    EQ   shift, and go to state 71
    GE   shift, and go to state 72
    GT   shift, and go to state 73
    NE   shift, and go to state 74
    ADD  shift, and go to state 75
    SUB  shift, and go to state 76
    MUL  shift, and go to state 77
    DIV  shift, and go to state 78
    MOD  shift, and go to state 79

    $default  reduce using rule 9 (const_variable_declaration)


State 170

   15 const_expr: const_expr . MOD const_expr
   16           | const_expr . MUL const_expr
   17           | const_expr . DIV const_expr
   18           | const_expr . ADD const_expr
   19           | const_expr . SUB const_expr
   20           | const_expr . AND const_expr
   21           | const_expr . OR const_expr
   22           | const_expr . LT const_expr
   23           | const_expr . LE const_expr
   24           | const_expr . EQ const_expr
   25           | const_expr . GE const_expr
   26           | const_expr . GT const_expr
   27           | const_expr . NE const_expr
   71 assign_stmt: ID LBRACKET const_expr RBRACKET ASSIGN const_expr .

    AND  shift, and go to state 67
    OR   shift, and go to state 68
    LT   shift, and go to state 69
    LE   shift, and go to state 70
    EQ   shift, and go to state 71
    GE   shift, and go to state 72
    GT   shift, and go to state 73
    NE   shift, and go to state 74
    ADD  shift, and go to state 75
    SUB  shift, and go to state 76
    MUL  shift, and go to state 77
    DIV  shift, and go to state 78
    MOD  shift, and go to state 79

    $default  reduce using rule 71 (assign_stmt)


State 171

   85 end_if_stmt: ELSE . $@8 block_program END IF

    $default  reduce using rule 84 ($@8)

    $@8  go to state 183


State 172

   83 end_if_stmt: END . IF

    IF  shift, and go to state 184


State 173

   82 if_stmt: IF const_expr THEN $@6 block_program $@7 end_if_stmt .

    $default  reduce using rule 82 (if_stmt)


State 174

   91 for_stmt: FOR DECREASING ID $@11 COLON const_expr DOT . DOT const_expr block_program END FOR

    DOT  shift, and go to state 185


State 175

   89 for_stmt: FOR ID $@10 COLON const_expr DOT DOT . const_expr block_program END FOR

    LPAREN     shift, and go to state 31
    NOT        shift, and go to state 32
    SUB        shift, and go to state 33
    I_CONST    shift, and go to state 34
    F_CONST    shift, and go to state 35
    STR_CONST  shift, and go to state 36
    ID         shift, and go to state 37
    TRUE       shift, and go to state 38
    FALSE      shift, and go to state 39

    const_expr          go to state 186
    const_val           go to state 41
    function_call_stmt  go to state 42


State 176

   44 function_declaration: FUNCTION ID LPAREN RPAREN COLON datatype $@1 . block_program END ID

    PUT     shift, and go to state 1
    _BEGIN  shift, and go to state 2
    IF      shift, and go to state 3
    EXIT    shift, and go to state 4
    FOR     shift, and go to state 5
    GET     shift, and go to state 7
    LOOP    shift, and go to state 8
    RESULT  shift, and go to state 10
    RETURN  shift, and go to state 11
    SKIP    shift, and go to state 12
    VAR     shift, and go to state 13
    CONST   shift, and go to state 14
    ID      shift, and go to state 15

    $default  reduce using rule 57 (block_program)

    variable_declaration  go to state 80
    block_program         go to state 187
    stmt                  go to state 82
    block_stmt            go to state 21
    assign_stmt           go to state 22
    put_stmt              go to state 23
    get_stmt              go to state 24
    result_stmt           go to state 25
    exit_stmt             go to state 26
    skip_stmt             go to state 27
    if_stmt               go to state 28
    loop_stmt             go to state 29
    for_stmt              go to state 30


State 177

   53 para_declaration: ID COLON ARRAY I_CONST . DOT DOT I_CONST OF datatype
   54                 | ID COLON ARRAY I_CONST . DOT DOT I_CONST OF datatype COMMA para_declaration

    DOT  shift, and go to state 188


State 178

   52 para_declaration: ID COLON datatype COMMA . para_declaration

    ID  shift, and go to state 124

    para_declaration  go to state 189


State 179

   46 function_declaration: FUNCTION ID LPAREN para_declaration RPAREN COLON datatype . $@2 block_program END ID

    $default  reduce using rule 45 ($@2)

    $@2  go to state 190


State 180

   48 procedure_declaration: PROCEDURE ID LPAREN RPAREN $@3 block_program END . ID

    ID  shift, and go to state 191


State 181

   50 procedure_declaration: PROCEDURE ID LPAREN para_declaration RPAREN $@4 block_program . END ID

    END  shift, and go to state 192


State 182

   13 var_variable_declaration: COLON ARRAY I_CONST DOT DOT . I_CONST OF datatype

    I_CONST  shift, and go to state 193


State 183

   85 end_if_stmt: ELSE $@8 . block_program END IF

    PUT     shift, and go to state 1
    _BEGIN  shift, and go to state 2
    IF      shift, and go to state 3
    EXIT    shift, and go to state 4
    FOR     shift, and go to state 5
    GET     shift, and go to state 7
    LOOP    shift, and go to state 8
    RESULT  shift, and go to state 10
    RETURN  shift, and go to state 11
    SKIP    shift, and go to state 12
    VAR     shift, and go to state 13
    CONST   shift, and go to state 14
    ID      shift, and go to state 15

    $default  reduce using rule 57 (block_program)

    variable_declaration  go to state 80
    block_program         go to state 194
    stmt                  go to state 82
    block_stmt            go to state 21
    assign_stmt           go to state 22
    put_stmt              go to state 23
    get_stmt              go to state 24
    result_stmt           go to state 25
    exit_stmt             go to state 26
    skip_stmt             go to state 27
    if_stmt               go to state 28
    loop_stmt             go to state 29
    for_stmt              go to state 30


State 184

   83 end_if_stmt: END IF .

    $default  reduce using rule 83 (end_if_stmt)


State 185

   91 for_stmt: FOR DECREASING ID $@11 COLON const_expr DOT DOT . const_expr block_program END FOR

    LPAREN     shift, and go to state 31
    NOT        shift, and go to state 32
    SUB        shift, and go to state 33
    I_CONST    shift, and go to state 34
    F_CONST    shift, and go to state 35
    STR_CONST  shift, and go to state 36
    ID         shift, and go to state 37
    TRUE       shift, and go to state 38
    FALSE      shift, and go to state 39

    const_expr          go to state 195
    const_val           go to state 41
    function_call_stmt  go to state 42


State 186

   15 const_expr: const_expr . MOD const_expr
   16           | const_expr . MUL const_expr
   17           | const_expr . DIV const_expr
   18           | const_expr . ADD const_expr
   19           | const_expr . SUB const_expr
   20           | const_expr . AND const_expr
   21           | const_expr . OR const_expr
   22           | const_expr . LT const_expr
   23           | const_expr . LE const_expr
   24           | const_expr . EQ const_expr
   25           | const_expr . GE const_expr
   26           | const_expr . GT const_expr
   27           | const_expr . NE const_expr
   89 for_stmt: FOR ID $@10 COLON const_expr DOT DOT const_expr . block_program END FOR

    PUT     shift, and go to state 1
    _BEGIN  shift, and go to state 2
    IF      shift, and go to state 3
    EXIT    shift, and go to state 4
    FOR     shift, and go to state 5
    GET     shift, and go to state 7
    LOOP    shift, and go to state 8
    RESULT  shift, and go to state 10
    RETURN  shift, and go to state 11
    SKIP    shift, and go to state 12
    VAR     shift, and go to state 13
    CONST   shift, and go to state 14
    AND     shift, and go to state 67
    OR      shift, and go to state 68
    LT      shift, and go to state 69
    LE      shift, and go to state 70
    EQ      shift, and go to state 71
    GE      shift, and go to state 72
    GT      shift, and go to state 73
    NE      shift, and go to state 74
    ADD     shift, and go to state 75
    SUB     shift, and go to state 76
    MUL     shift, and go to state 77
    DIV     shift, and go to state 78
    MOD     shift, and go to state 79
    ID      shift, and go to state 15

    $default  reduce using rule 57 (block_program)

    variable_declaration  go to state 80
    block_program         go to state 196
    stmt                  go to state 82
    block_stmt            go to state 21
    assign_stmt           go to state 22
    put_stmt              go to state 23
    get_stmt              go to state 24
    result_stmt           go to state 25
    exit_stmt             go to state 26
    skip_stmt             go to state 27
    if_stmt               go to state 28
    loop_stmt             go to state 29
    for_stmt              go to state 30


State 187

   44 function_declaration: FUNCTION ID LPAREN RPAREN COLON datatype $@1 block_program . END ID

    END  shift, and go to state 197


State 188

   53 para_declaration: ID COLON ARRAY I_CONST DOT . DOT I_CONST OF datatype
   54                 | ID COLON ARRAY I_CONST DOT . DOT I_CONST OF datatype COMMA para_declaration

    DOT  shift, and go to state 198


State 189

   52 para_declaration: ID COLON datatype COMMA para_declaration .

    $default  reduce using rule 52 (para_declaration)


State 190

   46 function_declaration: FUNCTION ID LPAREN para_declaration RPAREN COLON datatype $@2 . block_program END ID

    PUT     shift, and go to state 1
    _BEGIN  shift, and go to state 2
    IF      shift, and go to state 3
    EXIT    shift, and go to state 4
    FOR     shift, and go to state 5
    GET     shift, and go to state 7
    LOOP    shift, and go to state 8
    RESULT  shift, and go to state 10
    RETURN  shift, and go to state 11
    SKIP    shift, and go to state 12
    VAR     shift, and go to state 13
    CONST   shift, and go to state 14
    ID      shift, and go to state 15

    $default  reduce using rule 57 (block_program)

    variable_declaration  go to state 80
    block_program         go to state 199
    stmt                  go to state 82
    block_stmt            go to state 21
    assign_stmt           go to state 22
    put_stmt              go to state 23
    get_stmt              go to state 24
    result_stmt           go to state 25
    exit_stmt             go to state 26
    skip_stmt             go to state 27
    if_stmt               go to state 28
    loop_stmt             go to state 29
    for_stmt              go to state 30


State 191

   48 procedure_declaration: PROCEDURE ID LPAREN RPAREN $@3 block_program END ID .

    $default  reduce using rule 48 (procedure_declaration)


State 192

   50 procedure_declaration: PROCEDURE ID LPAREN para_declaration RPAREN $@4 block_program END . ID

    ID  shift, and go to state 200


State 193

   13 var_variable_declaration: COLON ARRAY I_CONST DOT DOT I_CONST . OF datatype

    OF  shift, and go to state 201


State 194

   85 end_if_stmt: ELSE $@8 block_program . END IF

    END  shift, and go to state 202


State 195

   15 const_expr: const_expr . MOD const_expr
   16           | const_expr . MUL const_expr
   17           | const_expr . DIV const_expr
   18           | const_expr . ADD const_expr
   19           | const_expr . SUB const_expr
   20           | const_expr . AND const_expr
   21           | const_expr . OR const_expr
   22           | const_expr . LT const_expr
   23           | const_expr . LE const_expr
   24           | const_expr . EQ const_expr
   25           | const_expr . GE const_expr
   26           | const_expr . GT const_expr
   27           | const_expr . NE const_expr
   91 for_stmt: FOR DECREASING ID $@11 COLON const_expr DOT DOT const_expr . block_program END FOR

    PUT     shift, and go to state 1
    _BEGIN  shift, and go to state 2
    IF      shift, and go to state 3
    EXIT    shift, and go to state 4
    FOR     shift, and go to state 5
    GET     shift, and go to state 7
    LOOP    shift, and go to state 8
    RESULT  shift, and go to state 10
    RETURN  shift, and go to state 11
    SKIP    shift, and go to state 12
    VAR     shift, and go to state 13
    CONST   shift, and go to state 14
    AND     shift, and go to state 67
    OR      shift, and go to state 68
    LT      shift, and go to state 69
    LE      shift, and go to state 70
    EQ      shift, and go to state 71
    GE      shift, and go to state 72
    GT      shift, and go to state 73
    NE      shift, and go to state 74
    ADD     shift, and go to state 75
    SUB     shift, and go to state 76
    MUL     shift, and go to state 77
    DIV     shift, and go to state 78
    MOD     shift, and go to state 79
    ID      shift, and go to state 15

    $default  reduce using rule 57 (block_program)

    variable_declaration  go to state 80
    block_program         go to state 203
    stmt                  go to state 82
    block_stmt            go to state 21
    assign_stmt           go to state 22
    put_stmt              go to state 23
    get_stmt              go to state 24
    result_stmt           go to state 25
    exit_stmt             go to state 26
    skip_stmt             go to state 27
    if_stmt               go to state 28
    loop_stmt             go to state 29
    for_stmt              go to state 30


State 196

   89 for_stmt: FOR ID $@10 COLON const_expr DOT DOT const_expr block_program . END FOR

    END  shift, and go to state 204


State 197

   44 function_declaration: FUNCTION ID LPAREN RPAREN COLON datatype $@1 block_program END . ID

    ID  shift, and go to state 205


State 198

   53 para_declaration: ID COLON ARRAY I_CONST DOT DOT . I_CONST OF datatype
   54                 | ID COLON ARRAY I_CONST DOT DOT . I_CONST OF datatype COMMA para_declaration

    I_CONST  shift, and go to state 206


State 199

   46 function_declaration: FUNCTION ID LPAREN para_declaration RPAREN COLON datatype $@2 block_program . END ID

    END  shift, and go to state 207


State 200

   50 procedure_declaration: PROCEDURE ID LPAREN para_declaration RPAREN $@4 block_program END ID .

    $default  reduce using rule 50 (procedure_declaration)


State 201

   13 var_variable_declaration: COLON ARRAY I_CONST DOT DOT I_CONST OF . datatype

    REAL    shift, and go to state 130
    INT     shift, and go to state 131
    STRING  shift, and go to state 132
    BOOL    shift, and go to state 134

    datatype  go to state 208


State 202

   85 end_if_stmt: ELSE $@8 block_program END . IF

    IF  shift, and go to state 209


State 203

   91 for_stmt: FOR DECREASING ID $@11 COLON const_expr DOT DOT const_expr block_program . END FOR

    END  shift, and go to state 210


State 204

   89 for_stmt: FOR ID $@10 COLON const_expr DOT DOT const_expr block_program END . FOR

    FOR  shift, and go to state 211


State 205

   44 function_declaration: FUNCTION ID LPAREN RPAREN COLON datatype $@1 block_program END ID .

    $default  reduce using rule 44 (function_declaration)


State 206

   53 para_declaration: ID COLON ARRAY I_CONST DOT DOT I_CONST . OF datatype
   54                 | ID COLON ARRAY I_CONST DOT DOT I_CONST . OF datatype COMMA para_declaration

    OF  shift, and go to state 212


State 207

   46 function_declaration: FUNCTION ID LPAREN para_declaration RPAREN COLON datatype $@2 block_program END . ID

    ID  shift, and go to state 213


State 208

   13 var_variable_declaration: COLON ARRAY I_CONST DOT DOT I_CONST OF datatype .

    $default  reduce using rule 13 (var_variable_declaration)


State 209

   85 end_if_stmt: ELSE $@8 block_program END IF .

    $default  reduce using rule 85 (end_if_stmt)


State 210

   91 for_stmt: FOR DECREASING ID $@11 COLON const_expr DOT DOT const_expr block_program END . FOR

    FOR  shift, and go to state 214


State 211

   89 for_stmt: FOR ID $@10 COLON const_expr DOT DOT const_expr block_program END FOR .

    $default  reduce using rule 89 (for_stmt)


State 212

   53 para_declaration: ID COLON ARRAY I_CONST DOT DOT I_CONST OF . datatype
   54                 | ID COLON ARRAY I_CONST DOT DOT I_CONST OF . datatype COMMA para_declaration

    REAL    shift, and go to state 130
    INT     shift, and go to state 131
    STRING  shift, and go to state 132
    BOOL    shift, and go to state 134

    datatype  go to state 215


State 213

   46 function_declaration: FUNCTION ID LPAREN para_declaration RPAREN COLON datatype $@2 block_program END ID .

    $default  reduce using rule 46 (function_declaration)


State 214

   91 for_stmt: FOR DECREASING ID $@11 COLON const_expr DOT DOT const_expr block_program END FOR .

    $default  reduce using rule 91 (for_stmt)


State 215

   53 para_declaration: ID COLON ARRAY I_CONST DOT DOT I_CONST OF datatype .
   54                 | ID COLON ARRAY I_CONST DOT DOT I_CONST OF datatype . COMMA para_declaration

    COMMA  shift, and go to state 216

    $default  reduce using rule 53 (para_declaration)


State 216

   54 para_declaration: ID COLON ARRAY I_CONST DOT DOT I_CONST OF datatype COMMA . para_declaration

    ID  shift, and go to state 124

    para_declaration  go to state 217


State 217

   54 para_declaration: ID COLON ARRAY I_CONST DOT DOT I_CONST OF datatype COMMA para_declaration .

    $default  reduce using rule 54 (para_declaration)
