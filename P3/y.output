Terminals unused in grammar

   LBRACE
   RBRACE
   SEMICOLON
   DEFAULT
   DO


State 227 conflicts: 1 shift/reduce
State 235 conflicts: 1 shift/reduce


Grammar

    0 $accept: program_body $end

    1 program_body: global_variable_declaration program_body
    2             | function_declaration program_body
    3             | procedure_declaration program_body

    4 $@1: %empty

    5 program_body: $@1 stmt_list

    6 stmt_list: stmt_list stmt
    7          | %empty

    8 global_variable_declaration: CONST ID const_variable_declaration
    9                            | VAR ID COLON datatype
   10                            | VAR ID ASSIGN I_CONST
   11                            | VAR ID COLON INT ASSIGN I_CONST

   12 local_variable_declaration: CONST ID const_variable_declaration
   13                           | VAR ID local_var_variable_declaration

   14 const_variable_declaration: ASSIGN I_CONST
   15                           | COLON INT ASSIGN I_CONST
   16                           | ASSIGN STR_CONST
   17                           | COLON STRING ASSIGN STR_CONST

   18 local_var_variable_declaration: ASSIGN const_expr
   19                               | COLON INT
   20                               | COLON INT ASSIGN const_expr
   21                               | COLON BOOL
   22                               | COLON BOOL ASSIGN const_expr

   23 const_expr: const_val
   24           | const_expr MOD const_expr
   25           | const_expr MUL const_expr
   26           | const_expr DIV const_expr
   27           | const_expr ADD const_expr
   28           | const_expr SUB const_expr
   29           | const_expr AND const_expr
   30           | const_expr OR const_expr
   31           | const_expr LT const_expr
   32           | const_expr LE const_expr
   33           | const_expr EQ const_expr
   34           | const_expr GE const_expr
   35           | const_expr GT const_expr
   36           | const_expr NE const_expr
   37           | NOT const_expr
   38           | SUB const_expr
   39           | LPAREN const_expr RPAREN

   40 const_val: I_CONST
   41          | F_CONST
   42          | STR_CONST
   43          | ID
   44          | ID LBRACKET const_expr RBRACKET
   45          | TRUE
   46          | FALSE
   47          | function_call_stmt

   48 datatype: INT
   49         | BOOL
   50         | STRING
   51         | REAL

   52 $@2: %empty

   53 function_declaration: FUNCTION ID LPAREN RPAREN COLON datatype $@2 block_program END ID

   54 $@3: %empty

   55 function_declaration: FUNCTION ID LPAREN para_declaration RPAREN COLON datatype $@3 block_program END ID

   56 $@4: %empty

   57 procedure_declaration: PROCEDURE ID LPAREN RPAREN $@4 block_program END ID

   58 $@5: %empty

   59 procedure_declaration: PROCEDURE ID LPAREN para_declaration RPAREN $@5 block_program END ID

   60 para_declaration: ID COLON datatype
   61                 | para_declaration COMMA ID COLON datatype
   62                 | ID COLON ARRAY I_CONST DOT DOT I_CONST OF datatype
   63                 | ID COLON ARRAY I_CONST DOT DOT I_CONST OF datatype COMMA para_declaration

   64 block_program: local_variable_declaration block_program
   65              | stmt block_program
   66              | %empty

   67 stmt: block_stmt
   68     | assign_stmt
   69     | put_stmt
   70     | get_stmt
   71     | result_stmt
   72     | exit_stmt
   73     | skip_stmt
   74     | if_stmt
   75     | loop_stmt
   76     | for_stmt
   77     | function_call_stmt

   78 $@6: %empty

   79 block_stmt: _BEGIN $@6 block_program END

   80 assign_stmt: ID ASSIGN const_expr
   81            | ID LBRACKET const_expr RBRACKET ASSIGN const_expr

   82 $@7: %empty

   83 put_stmt: PUT $@7 const_expr

   84 get_stmt: GET ID
   85         | GET ID LBRACKET const_expr RBRACKET

   86 result_stmt: RESULT const_expr
   87            | RETURN

   88 exit_stmt: EXIT
   89          | EXIT WHEN const_expr

   90 skip_stmt: SKIP

   91 $@8: %empty

   92 $@9: %empty

   93 if_stmt: IF const_expr THEN $@8 block_program $@9 end_if_stmt

   94 end_if_stmt: END IF

   95 $@10: %empty

   96 $@11: %empty

   97 end_if_stmt: ELSE $@10 block_program $@11 END IF

   98 $@12: %empty

   99 loop_stmt: LOOP $@12 block_program END LOOP

  100 $@13: %empty

  101 $@14: %empty

  102 for_stmt: FOR ID $@13 COLON for_para DOT DOT for_para $@14 block_program END FOR

  103 $@15: %empty

  104 $@16: %empty

  105 for_stmt: FOR DECREASING ID $@15 COLON for_para DOT DOT for_para $@16 block_program END FOR

  106 for_para: I_CONST
  107         | ID

  108 function_call_stmt: ID LPAREN RPAREN
  109                   | ID LPAREN function_call_para RPAREN

  110 function_call_para: const_expr
  111                   | const_expr COMMA function_call_para


Terminals, with rules where they appear

$end (0) 0
error (256)
DOT (258) 62 63 102 105
COMMA (259) 61 63 111
COLON (260) 9 11 15 17 19 20 21 22 53 55 60 61 62 63 102 105
LPAREN (261) 39 53 55 57 59 108 109
RPAREN (262) 39 53 55 57 59 108 109
LBRACKET (263) 44 81 85
RBRACKET (264) 44 81 85
LBRACE (265)
RBRACE (266)
SEMICOLON (267)
BOOL (268) 21 22 49
ASSIGN (269) 10 11 14 15 16 17 18 20 22 80 81
PUT (270) 83
_BEGIN (271) 79
DECREASING (272) 105
DEFAULT (273)
DO (274)
WHEN (275) 89
IF (276) 93 94 97
ELSE (277) 97
END (278) 53 55 57 59 79 94 97 99 102 105
EXIT (279) 88 89
FOR (280) 102 105
FUNCTION (281) 53 55
GET (282) 84 85
LOOP (283) 99
OF (284) 62 63
PROCEDURE (285) 57 59
REAL (286) 51
RESULT (287) 86
RETURN (288) 87
SKIP (289) 90
THEN (290) 93
VAR (291) 9 10 11 13
CONST (292) 8 12
INT (293) 11 15 19 20 48
STRING (294) 17 50
ARRAY (295) 62 63
NOT (296) 37
AND (297) 29
OR (298) 30
LT (299) 31
LE (300) 32
EQ (301) 33
GE (302) 34
GT (303) 35
NE (304) 36
ADD (305) 27
SUB (306) 28 38
MUL (307) 25
DIV (308) 26
MOD (309) 24
UMINUS (310)
I_CONST (311) 10 11 14 15 40 62 63 106
F_CONST (312) 41
STR_CONST (313) 16 17 42
ID (314) 8 9 10 11 12 13 43 44 53 55 57 59 60 61 62 63 80 81 84 85
    102 105 107 108 109
TRUE (315) 45
FALSE (316) 46


Nonterminals, with rules where they appear

$accept (62)
    on left: 0
program_body (63)
    on left: 1 2 3 5, on right: 0 1 2 3
$@1 (64)
    on left: 4, on right: 5
stmt_list (65)
    on left: 6 7, on right: 5 6
global_variable_declaration (66)
    on left: 8 9 10 11, on right: 1
local_variable_declaration (67)
    on left: 12 13, on right: 64
const_variable_declaration (68)
    on left: 14 15 16 17, on right: 8 12
local_var_variable_declaration (69)
    on left: 18 19 20 21 22, on right: 13
const_expr (70)
    on left: 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39, on right:
    18 20 22 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 44 80
    81 83 85 86 89 93 110 111
const_val (71)
    on left: 40 41 42 43 44 45 46 47, on right: 23
datatype (72)
    on left: 48 49 50 51, on right: 9 53 55 60 61 62 63
function_declaration (73)
    on left: 53 55, on right: 2
$@2 (74)
    on left: 52, on right: 53
$@3 (75)
    on left: 54, on right: 55
procedure_declaration (76)
    on left: 57 59, on right: 3
$@4 (77)
    on left: 56, on right: 57
$@5 (78)
    on left: 58, on right: 59
para_declaration (79)
    on left: 60 61 62 63, on right: 55 59 61 63
block_program (80)
    on left: 64 65 66, on right: 53 55 57 59 64 65 79 93 97 99 102
    105
stmt (81)
    on left: 67 68 69 70 71 72 73 74 75 76 77, on right: 6 65
block_stmt (82)
    on left: 79, on right: 67
$@6 (83)
    on left: 78, on right: 79
assign_stmt (84)
    on left: 80 81, on right: 68
put_stmt (85)
    on left: 83, on right: 69
$@7 (86)
    on left: 82, on right: 83
get_stmt (87)
    on left: 84 85, on right: 70
result_stmt (88)
    on left: 86 87, on right: 71
exit_stmt (89)
    on left: 88 89, on right: 72
skip_stmt (90)
    on left: 90, on right: 73
if_stmt (91)
    on left: 93, on right: 74
$@8 (92)
    on left: 91, on right: 93
$@9 (93)
    on left: 92, on right: 93
end_if_stmt (94)
    on left: 94 97, on right: 93
$@10 (95)
    on left: 95, on right: 97
$@11 (96)
    on left: 96, on right: 97
loop_stmt (97)
    on left: 99, on right: 75
$@12 (98)
    on left: 98, on right: 99
for_stmt (99)
    on left: 102 105, on right: 76
$@13 (100)
    on left: 100, on right: 102
$@14 (101)
    on left: 101, on right: 102
$@15 (102)
    on left: 103, on right: 105
$@16 (103)
    on left: 104, on right: 105
for_para (104)
    on left: 106 107, on right: 102 105
function_call_stmt (105)
    on left: 108 109, on right: 47 77
function_call_para (106)
    on left: 110 111, on right: 109 111


State 0

    0 $accept: . program_body $end

    FUNCTION   shift, and go to state 1
    PROCEDURE  shift, and go to state 2
    VAR        shift, and go to state 3
    CONST      shift, and go to state 4

    $default  reduce using rule 4 ($@1)

    program_body                 go to state 5
    $@1                          go to state 6
    global_variable_declaration  go to state 7
    function_declaration         go to state 8
    procedure_declaration        go to state 9


State 1

   53 function_declaration: FUNCTION . ID LPAREN RPAREN COLON datatype $@2 block_program END ID
   55                     | FUNCTION . ID LPAREN para_declaration RPAREN COLON datatype $@3 block_program END ID

    ID  shift, and go to state 10


State 2

   57 procedure_declaration: PROCEDURE . ID LPAREN RPAREN $@4 block_program END ID
   59                      | PROCEDURE . ID LPAREN para_declaration RPAREN $@5 block_program END ID

    ID  shift, and go to state 11


State 3

    9 global_variable_declaration: VAR . ID COLON datatype
   10                            | VAR . ID ASSIGN I_CONST
   11                            | VAR . ID COLON INT ASSIGN I_CONST

    ID  shift, and go to state 12


State 4

    8 global_variable_declaration: CONST . ID const_variable_declaration

    ID  shift, and go to state 13


State 5

    0 $accept: program_body . $end

    $end  shift, and go to state 14


State 6

    5 program_body: $@1 . stmt_list

    $default  reduce using rule 7 (stmt_list)

    stmt_list  go to state 15


State 7

    1 program_body: global_variable_declaration . program_body

    FUNCTION   shift, and go to state 1
    PROCEDURE  shift, and go to state 2
    VAR        shift, and go to state 3
    CONST      shift, and go to state 4

    $default  reduce using rule 4 ($@1)

    program_body                 go to state 16
    $@1                          go to state 6
    global_variable_declaration  go to state 7
    function_declaration         go to state 8
    procedure_declaration        go to state 9


State 8

    2 program_body: function_declaration . program_body

    FUNCTION   shift, and go to state 1
    PROCEDURE  shift, and go to state 2
    VAR        shift, and go to state 3
    CONST      shift, and go to state 4

    $default  reduce using rule 4 ($@1)

    program_body                 go to state 17
    $@1                          go to state 6
    global_variable_declaration  go to state 7
    function_declaration         go to state 8
    procedure_declaration        go to state 9


State 9

    3 program_body: procedure_declaration . program_body

    FUNCTION   shift, and go to state 1
    PROCEDURE  shift, and go to state 2
    VAR        shift, and go to state 3
    CONST      shift, and go to state 4

    $default  reduce using rule 4 ($@1)

    program_body                 go to state 18
    $@1                          go to state 6
    global_variable_declaration  go to state 7
    function_declaration         go to state 8
    procedure_declaration        go to state 9


State 10

   53 function_declaration: FUNCTION ID . LPAREN RPAREN COLON datatype $@2 block_program END ID
   55                     | FUNCTION ID . LPAREN para_declaration RPAREN COLON datatype $@3 block_program END ID

    LPAREN  shift, and go to state 19


State 11

   57 procedure_declaration: PROCEDURE ID . LPAREN RPAREN $@4 block_program END ID
   59                      | PROCEDURE ID . LPAREN para_declaration RPAREN $@5 block_program END ID

    LPAREN  shift, and go to state 20


State 12

    9 global_variable_declaration: VAR ID . COLON datatype
   10                            | VAR ID . ASSIGN I_CONST
   11                            | VAR ID . COLON INT ASSIGN I_CONST

    COLON   shift, and go to state 21
    ASSIGN  shift, and go to state 22


State 13

    8 global_variable_declaration: CONST ID . const_variable_declaration

    COLON   shift, and go to state 23
    ASSIGN  shift, and go to state 24

    const_variable_declaration  go to state 25


State 14

    0 $accept: program_body $end .

    $default  accept


State 15

    5 program_body: $@1 stmt_list .
    6 stmt_list: stmt_list . stmt

    PUT     shift, and go to state 26
    _BEGIN  shift, and go to state 27
    IF      shift, and go to state 28
    EXIT    shift, and go to state 29
    FOR     shift, and go to state 30
    GET     shift, and go to state 31
    LOOP    shift, and go to state 32
    RESULT  shift, and go to state 33
    RETURN  shift, and go to state 34
    SKIP    shift, and go to state 35
    ID      shift, and go to state 36

    $default  reduce using rule 5 (program_body)

    stmt                go to state 37
    block_stmt          go to state 38
    assign_stmt         go to state 39
    put_stmt            go to state 40
    get_stmt            go to state 41
    result_stmt         go to state 42
    exit_stmt           go to state 43
    skip_stmt           go to state 44
    if_stmt             go to state 45
    loop_stmt           go to state 46
    for_stmt            go to state 47
    function_call_stmt  go to state 48


State 16

    1 program_body: global_variable_declaration program_body .

    $default  reduce using rule 1 (program_body)


State 17

    2 program_body: function_declaration program_body .

    $default  reduce using rule 2 (program_body)


State 18

    3 program_body: procedure_declaration program_body .

    $default  reduce using rule 3 (program_body)


State 19

   53 function_declaration: FUNCTION ID LPAREN . RPAREN COLON datatype $@2 block_program END ID
   55                     | FUNCTION ID LPAREN . para_declaration RPAREN COLON datatype $@3 block_program END ID

    RPAREN  shift, and go to state 49
    ID      shift, and go to state 50

    para_declaration  go to state 51


State 20

   57 procedure_declaration: PROCEDURE ID LPAREN . RPAREN $@4 block_program END ID
   59                      | PROCEDURE ID LPAREN . para_declaration RPAREN $@5 block_program END ID

    RPAREN  shift, and go to state 52
    ID      shift, and go to state 50

    para_declaration  go to state 53


State 21

    9 global_variable_declaration: VAR ID COLON . datatype
   11                            | VAR ID COLON . INT ASSIGN I_CONST

    BOOL    shift, and go to state 54
    REAL    shift, and go to state 55
    INT     shift, and go to state 56
    STRING  shift, and go to state 57

    datatype  go to state 58


State 22

   10 global_variable_declaration: VAR ID ASSIGN . I_CONST

    I_CONST  shift, and go to state 59


State 23

   15 const_variable_declaration: COLON . INT ASSIGN I_CONST
   17                           | COLON . STRING ASSIGN STR_CONST

    INT     shift, and go to state 60
    STRING  shift, and go to state 61


State 24

   14 const_variable_declaration: ASSIGN . I_CONST
   16                           | ASSIGN . STR_CONST

    I_CONST    shift, and go to state 62
    STR_CONST  shift, and go to state 63


State 25

    8 global_variable_declaration: CONST ID const_variable_declaration .

    $default  reduce using rule 8 (global_variable_declaration)


State 26

   83 put_stmt: PUT . $@7 const_expr

    $default  reduce using rule 82 ($@7)

    $@7  go to state 64


State 27

   79 block_stmt: _BEGIN . $@6 block_program END

    $default  reduce using rule 78 ($@6)

    $@6  go to state 65


State 28

   93 if_stmt: IF . const_expr THEN $@8 block_program $@9 end_if_stmt

    LPAREN     shift, and go to state 66
    NOT        shift, and go to state 67
    SUB        shift, and go to state 68
    I_CONST    shift, and go to state 69
    F_CONST    shift, and go to state 70
    STR_CONST  shift, and go to state 71
    ID         shift, and go to state 72
    TRUE       shift, and go to state 73
    FALSE      shift, and go to state 74

    const_expr          go to state 75
    const_val           go to state 76
    function_call_stmt  go to state 77


State 29

   88 exit_stmt: EXIT .
   89          | EXIT . WHEN const_expr

    WHEN  shift, and go to state 78

    $default  reduce using rule 88 (exit_stmt)


State 30

  102 for_stmt: FOR . ID $@13 COLON for_para DOT DOT for_para $@14 block_program END FOR
  105         | FOR . DECREASING ID $@15 COLON for_para DOT DOT for_para $@16 block_program END FOR

    DECREASING  shift, and go to state 79
    ID          shift, and go to state 80


State 31

   84 get_stmt: GET . ID
   85         | GET . ID LBRACKET const_expr RBRACKET

    ID  shift, and go to state 81


State 32

   99 loop_stmt: LOOP . $@12 block_program END LOOP

    $default  reduce using rule 98 ($@12)

    $@12  go to state 82


State 33

   86 result_stmt: RESULT . const_expr

    LPAREN     shift, and go to state 66
    NOT        shift, and go to state 67
    SUB        shift, and go to state 68
    I_CONST    shift, and go to state 69
    F_CONST    shift, and go to state 70
    STR_CONST  shift, and go to state 71
    ID         shift, and go to state 72
    TRUE       shift, and go to state 73
    FALSE      shift, and go to state 74

    const_expr          go to state 83
    const_val           go to state 76
    function_call_stmt  go to state 77


State 34

   87 result_stmt: RETURN .

    $default  reduce using rule 87 (result_stmt)


State 35

   90 skip_stmt: SKIP .

    $default  reduce using rule 90 (skip_stmt)


State 36

   80 assign_stmt: ID . ASSIGN const_expr
   81            | ID . LBRACKET const_expr RBRACKET ASSIGN const_expr
  108 function_call_stmt: ID . LPAREN RPAREN
  109                   | ID . LPAREN function_call_para RPAREN

    LPAREN    shift, and go to state 84
    LBRACKET  shift, and go to state 85
    ASSIGN    shift, and go to state 86


State 37

    6 stmt_list: stmt_list stmt .

    $default  reduce using rule 6 (stmt_list)


State 38

   67 stmt: block_stmt .

    $default  reduce using rule 67 (stmt)


State 39

   68 stmt: assign_stmt .

    $default  reduce using rule 68 (stmt)


State 40

   69 stmt: put_stmt .

    $default  reduce using rule 69 (stmt)


State 41

   70 stmt: get_stmt .

    $default  reduce using rule 70 (stmt)


State 42

   71 stmt: result_stmt .

    $default  reduce using rule 71 (stmt)


State 43

   72 stmt: exit_stmt .

    $default  reduce using rule 72 (stmt)


State 44

   73 stmt: skip_stmt .

    $default  reduce using rule 73 (stmt)


State 45

   74 stmt: if_stmt .

    $default  reduce using rule 74 (stmt)


State 46

   75 stmt: loop_stmt .

    $default  reduce using rule 75 (stmt)


State 47

   76 stmt: for_stmt .

    $default  reduce using rule 76 (stmt)


State 48

   77 stmt: function_call_stmt .

    $default  reduce using rule 77 (stmt)


State 49

   53 function_declaration: FUNCTION ID LPAREN RPAREN . COLON datatype $@2 block_program END ID

    COLON  shift, and go to state 87


State 50

   60 para_declaration: ID . COLON datatype
   62                 | ID . COLON ARRAY I_CONST DOT DOT I_CONST OF datatype
   63                 | ID . COLON ARRAY I_CONST DOT DOT I_CONST OF datatype COMMA para_declaration

    COLON  shift, and go to state 88


State 51

   55 function_declaration: FUNCTION ID LPAREN para_declaration . RPAREN COLON datatype $@3 block_program END ID
   61 para_declaration: para_declaration . COMMA ID COLON datatype

    COMMA   shift, and go to state 89
    RPAREN  shift, and go to state 90


State 52

   57 procedure_declaration: PROCEDURE ID LPAREN RPAREN . $@4 block_program END ID

    $default  reduce using rule 56 ($@4)

    $@4  go to state 91


State 53

   59 procedure_declaration: PROCEDURE ID LPAREN para_declaration . RPAREN $@5 block_program END ID
   61 para_declaration: para_declaration . COMMA ID COLON datatype

    COMMA   shift, and go to state 89
    RPAREN  shift, and go to state 92


State 54

   49 datatype: BOOL .

    $default  reduce using rule 49 (datatype)


State 55

   51 datatype: REAL .

    $default  reduce using rule 51 (datatype)


State 56

   11 global_variable_declaration: VAR ID COLON INT . ASSIGN I_CONST
   48 datatype: INT .

    ASSIGN  shift, and go to state 93

    $default  reduce using rule 48 (datatype)


State 57

   50 datatype: STRING .

    $default  reduce using rule 50 (datatype)


State 58

    9 global_variable_declaration: VAR ID COLON datatype .

    $default  reduce using rule 9 (global_variable_declaration)


State 59

   10 global_variable_declaration: VAR ID ASSIGN I_CONST .

    $default  reduce using rule 10 (global_variable_declaration)


State 60

   15 const_variable_declaration: COLON INT . ASSIGN I_CONST

    ASSIGN  shift, and go to state 94


State 61

   17 const_variable_declaration: COLON STRING . ASSIGN STR_CONST

    ASSIGN  shift, and go to state 95


State 62

   14 const_variable_declaration: ASSIGN I_CONST .

    $default  reduce using rule 14 (const_variable_declaration)


State 63

   16 const_variable_declaration: ASSIGN STR_CONST .

    $default  reduce using rule 16 (const_variable_declaration)


State 64

   83 put_stmt: PUT $@7 . const_expr

    LPAREN     shift, and go to state 66
    NOT        shift, and go to state 67
    SUB        shift, and go to state 68
    I_CONST    shift, and go to state 69
    F_CONST    shift, and go to state 70
    STR_CONST  shift, and go to state 71
    ID         shift, and go to state 72
    TRUE       shift, and go to state 73
    FALSE      shift, and go to state 74

    const_expr          go to state 96
    const_val           go to state 76
    function_call_stmt  go to state 77


State 65

   79 block_stmt: _BEGIN $@6 . block_program END

    PUT     shift, and go to state 26
    _BEGIN  shift, and go to state 27
    IF      shift, and go to state 28
    EXIT    shift, and go to state 29
    FOR     shift, and go to state 30
    GET     shift, and go to state 31
    LOOP    shift, and go to state 32
    RESULT  shift, and go to state 33
    RETURN  shift, and go to state 34
    SKIP    shift, and go to state 35
    VAR     shift, and go to state 97
    CONST   shift, and go to state 98
    ID      shift, and go to state 36

    $default  reduce using rule 66 (block_program)

    local_variable_declaration  go to state 99
    block_program               go to state 100
    stmt                        go to state 101
    block_stmt                  go to state 38
    assign_stmt                 go to state 39
    put_stmt                    go to state 40
    get_stmt                    go to state 41
    result_stmt                 go to state 42
    exit_stmt                   go to state 43
    skip_stmt                   go to state 44
    if_stmt                     go to state 45
    loop_stmt                   go to state 46
    for_stmt                    go to state 47
    function_call_stmt          go to state 48


State 66

   39 const_expr: LPAREN . const_expr RPAREN

    LPAREN     shift, and go to state 66
    NOT        shift, and go to state 67
    SUB        shift, and go to state 68
    I_CONST    shift, and go to state 69
    F_CONST    shift, and go to state 70
    STR_CONST  shift, and go to state 71
    ID         shift, and go to state 72
    TRUE       shift, and go to state 73
    FALSE      shift, and go to state 74

    const_expr          go to state 102
    const_val           go to state 76
    function_call_stmt  go to state 77


State 67

   37 const_expr: NOT . const_expr

    LPAREN     shift, and go to state 66
    NOT        shift, and go to state 67
    SUB        shift, and go to state 68
    I_CONST    shift, and go to state 69
    F_CONST    shift, and go to state 70
    STR_CONST  shift, and go to state 71
    ID         shift, and go to state 72
    TRUE       shift, and go to state 73
    FALSE      shift, and go to state 74

    const_expr          go to state 103
    const_val           go to state 76
    function_call_stmt  go to state 77


State 68

   38 const_expr: SUB . const_expr

    LPAREN     shift, and go to state 66
    NOT        shift, and go to state 67
    SUB        shift, and go to state 68
    I_CONST    shift, and go to state 69
    F_CONST    shift, and go to state 70
    STR_CONST  shift, and go to state 71
    ID         shift, and go to state 72
    TRUE       shift, and go to state 73
    FALSE      shift, and go to state 74

    const_expr          go to state 104
    const_val           go to state 76
    function_call_stmt  go to state 77


State 69

   40 const_val: I_CONST .

    $default  reduce using rule 40 (const_val)


State 70

   41 const_val: F_CONST .

    $default  reduce using rule 41 (const_val)


State 71

   42 const_val: STR_CONST .

    $default  reduce using rule 42 (const_val)


State 72

   43 const_val: ID .
   44          | ID . LBRACKET const_expr RBRACKET
  108 function_call_stmt: ID . LPAREN RPAREN
  109                   | ID . LPAREN function_call_para RPAREN

    LPAREN    shift, and go to state 84
    LBRACKET  shift, and go to state 105

    $default  reduce using rule 43 (const_val)


State 73

   45 const_val: TRUE .

    $default  reduce using rule 45 (const_val)


State 74

   46 const_val: FALSE .

    $default  reduce using rule 46 (const_val)


State 75

   24 const_expr: const_expr . MOD const_expr
   25           | const_expr . MUL const_expr
   26           | const_expr . DIV const_expr
   27           | const_expr . ADD const_expr
   28           | const_expr . SUB const_expr
   29           | const_expr . AND const_expr
   30           | const_expr . OR const_expr
   31           | const_expr . LT const_expr
   32           | const_expr . LE const_expr
   33           | const_expr . EQ const_expr
   34           | const_expr . GE const_expr
   35           | const_expr . GT const_expr
   36           | const_expr . NE const_expr
   93 if_stmt: IF const_expr . THEN $@8 block_program $@9 end_if_stmt

    THEN  shift, and go to state 106
    AND   shift, and go to state 107
    OR    shift, and go to state 108
    LT    shift, and go to state 109
    LE    shift, and go to state 110
    EQ    shift, and go to state 111
    GE    shift, and go to state 112
    GT    shift, and go to state 113
    NE    shift, and go to state 114
    ADD   shift, and go to state 115
    SUB   shift, and go to state 116
    MUL   shift, and go to state 117
    DIV   shift, and go to state 118
    MOD   shift, and go to state 119


State 76

   23 const_expr: const_val .

    $default  reduce using rule 23 (const_expr)


State 77

   47 const_val: function_call_stmt .

    $default  reduce using rule 47 (const_val)


State 78

   89 exit_stmt: EXIT WHEN . const_expr

    LPAREN     shift, and go to state 66
    NOT        shift, and go to state 67
    SUB        shift, and go to state 68
    I_CONST    shift, and go to state 69
    F_CONST    shift, and go to state 70
    STR_CONST  shift, and go to state 71
    ID         shift, and go to state 72
    TRUE       shift, and go to state 73
    FALSE      shift, and go to state 74

    const_expr          go to state 120
    const_val           go to state 76
    function_call_stmt  go to state 77


State 79

  105 for_stmt: FOR DECREASING . ID $@15 COLON for_para DOT DOT for_para $@16 block_program END FOR

    ID  shift, and go to state 121


State 80

  102 for_stmt: FOR ID . $@13 COLON for_para DOT DOT for_para $@14 block_program END FOR

    $default  reduce using rule 100 ($@13)

    $@13  go to state 122


State 81

   84 get_stmt: GET ID .
   85         | GET ID . LBRACKET const_expr RBRACKET

    LBRACKET  shift, and go to state 123

    $default  reduce using rule 84 (get_stmt)


State 82

   99 loop_stmt: LOOP $@12 . block_program END LOOP

    PUT     shift, and go to state 26
    _BEGIN  shift, and go to state 27
    IF      shift, and go to state 28
    EXIT    shift, and go to state 29
    FOR     shift, and go to state 30
    GET     shift, and go to state 31
    LOOP    shift, and go to state 32
    RESULT  shift, and go to state 33
    RETURN  shift, and go to state 34
    SKIP    shift, and go to state 35
    VAR     shift, and go to state 97
    CONST   shift, and go to state 98
    ID      shift, and go to state 36

    $default  reduce using rule 66 (block_program)

    local_variable_declaration  go to state 99
    block_program               go to state 124
    stmt                        go to state 101
    block_stmt                  go to state 38
    assign_stmt                 go to state 39
    put_stmt                    go to state 40
    get_stmt                    go to state 41
    result_stmt                 go to state 42
    exit_stmt                   go to state 43
    skip_stmt                   go to state 44
    if_stmt                     go to state 45
    loop_stmt                   go to state 46
    for_stmt                    go to state 47
    function_call_stmt          go to state 48


State 83

   24 const_expr: const_expr . MOD const_expr
   25           | const_expr . MUL const_expr
   26           | const_expr . DIV const_expr
   27           | const_expr . ADD const_expr
   28           | const_expr . SUB const_expr
   29           | const_expr . AND const_expr
   30           | const_expr . OR const_expr
   31           | const_expr . LT const_expr
   32           | const_expr . LE const_expr
   33           | const_expr . EQ const_expr
   34           | const_expr . GE const_expr
   35           | const_expr . GT const_expr
   36           | const_expr . NE const_expr
   86 result_stmt: RESULT const_expr .

    AND  shift, and go to state 107
    OR   shift, and go to state 108
    LT   shift, and go to state 109
    LE   shift, and go to state 110
    EQ   shift, and go to state 111
    GE   shift, and go to state 112
    GT   shift, and go to state 113
    NE   shift, and go to state 114
    ADD  shift, and go to state 115
    SUB  shift, and go to state 116
    MUL  shift, and go to state 117
    DIV  shift, and go to state 118
    MOD  shift, and go to state 119

    $default  reduce using rule 86 (result_stmt)


State 84

  108 function_call_stmt: ID LPAREN . RPAREN
  109                   | ID LPAREN . function_call_para RPAREN

    LPAREN     shift, and go to state 66
    RPAREN     shift, and go to state 125
    NOT        shift, and go to state 67
    SUB        shift, and go to state 68
    I_CONST    shift, and go to state 69
    F_CONST    shift, and go to state 70
    STR_CONST  shift, and go to state 71
    ID         shift, and go to state 72
    TRUE       shift, and go to state 73
    FALSE      shift, and go to state 74

    const_expr          go to state 126
    const_val           go to state 76
    function_call_stmt  go to state 77
    function_call_para  go to state 127


State 85

   81 assign_stmt: ID LBRACKET . const_expr RBRACKET ASSIGN const_expr

    LPAREN     shift, and go to state 66
    NOT        shift, and go to state 67
    SUB        shift, and go to state 68
    I_CONST    shift, and go to state 69
    F_CONST    shift, and go to state 70
    STR_CONST  shift, and go to state 71
    ID         shift, and go to state 72
    TRUE       shift, and go to state 73
    FALSE      shift, and go to state 74

    const_expr          go to state 128
    const_val           go to state 76
    function_call_stmt  go to state 77


State 86

   80 assign_stmt: ID ASSIGN . const_expr

    LPAREN     shift, and go to state 66
    NOT        shift, and go to state 67
    SUB        shift, and go to state 68
    I_CONST    shift, and go to state 69
    F_CONST    shift, and go to state 70
    STR_CONST  shift, and go to state 71
    ID         shift, and go to state 72
    TRUE       shift, and go to state 73
    FALSE      shift, and go to state 74

    const_expr          go to state 129
    const_val           go to state 76
    function_call_stmt  go to state 77


State 87

   53 function_declaration: FUNCTION ID LPAREN RPAREN COLON . datatype $@2 block_program END ID

    BOOL    shift, and go to state 54
    REAL    shift, and go to state 55
    INT     shift, and go to state 130
    STRING  shift, and go to state 57

    datatype  go to state 131


State 88

   60 para_declaration: ID COLON . datatype
   62                 | ID COLON . ARRAY I_CONST DOT DOT I_CONST OF datatype
   63                 | ID COLON . ARRAY I_CONST DOT DOT I_CONST OF datatype COMMA para_declaration

    BOOL    shift, and go to state 54
    REAL    shift, and go to state 55
    INT     shift, and go to state 130
    STRING  shift, and go to state 57
    ARRAY   shift, and go to state 132

    datatype  go to state 133


State 89

   61 para_declaration: para_declaration COMMA . ID COLON datatype

    ID  shift, and go to state 134


State 90

   55 function_declaration: FUNCTION ID LPAREN para_declaration RPAREN . COLON datatype $@3 block_program END ID

    COLON  shift, and go to state 135


State 91

   57 procedure_declaration: PROCEDURE ID LPAREN RPAREN $@4 . block_program END ID

    PUT     shift, and go to state 26
    _BEGIN  shift, and go to state 27
    IF      shift, and go to state 28
    EXIT    shift, and go to state 29
    FOR     shift, and go to state 30
    GET     shift, and go to state 31
    LOOP    shift, and go to state 32
    RESULT  shift, and go to state 33
    RETURN  shift, and go to state 34
    SKIP    shift, and go to state 35
    VAR     shift, and go to state 97
    CONST   shift, and go to state 98
    ID      shift, and go to state 36

    $default  reduce using rule 66 (block_program)

    local_variable_declaration  go to state 99
    block_program               go to state 136
    stmt                        go to state 101
    block_stmt                  go to state 38
    assign_stmt                 go to state 39
    put_stmt                    go to state 40
    get_stmt                    go to state 41
    result_stmt                 go to state 42
    exit_stmt                   go to state 43
    skip_stmt                   go to state 44
    if_stmt                     go to state 45
    loop_stmt                   go to state 46
    for_stmt                    go to state 47
    function_call_stmt          go to state 48


State 92

   59 procedure_declaration: PROCEDURE ID LPAREN para_declaration RPAREN . $@5 block_program END ID

    $default  reduce using rule 58 ($@5)

    $@5  go to state 137


State 93

   11 global_variable_declaration: VAR ID COLON INT ASSIGN . I_CONST

    I_CONST  shift, and go to state 138


State 94

   15 const_variable_declaration: COLON INT ASSIGN . I_CONST

    I_CONST  shift, and go to state 139


State 95

   17 const_variable_declaration: COLON STRING ASSIGN . STR_CONST

    STR_CONST  shift, and go to state 140


State 96

   24 const_expr: const_expr . MOD const_expr
   25           | const_expr . MUL const_expr
   26           | const_expr . DIV const_expr
   27           | const_expr . ADD const_expr
   28           | const_expr . SUB const_expr
   29           | const_expr . AND const_expr
   30           | const_expr . OR const_expr
   31           | const_expr . LT const_expr
   32           | const_expr . LE const_expr
   33           | const_expr . EQ const_expr
   34           | const_expr . GE const_expr
   35           | const_expr . GT const_expr
   36           | const_expr . NE const_expr
   83 put_stmt: PUT $@7 const_expr .

    AND  shift, and go to state 107
    OR   shift, and go to state 108
    LT   shift, and go to state 109
    LE   shift, and go to state 110
    EQ   shift, and go to state 111
    GE   shift, and go to state 112
    GT   shift, and go to state 113
    NE   shift, and go to state 114
    ADD  shift, and go to state 115
    SUB  shift, and go to state 116
    MUL  shift, and go to state 117
    DIV  shift, and go to state 118
    MOD  shift, and go to state 119

    $default  reduce using rule 83 (put_stmt)


State 97

   13 local_variable_declaration: VAR . ID local_var_variable_declaration

    ID  shift, and go to state 141


State 98

   12 local_variable_declaration: CONST . ID const_variable_declaration

    ID  shift, and go to state 142


State 99

   64 block_program: local_variable_declaration . block_program

    PUT     shift, and go to state 26
    _BEGIN  shift, and go to state 27
    IF      shift, and go to state 28
    EXIT    shift, and go to state 29
    FOR     shift, and go to state 30
    GET     shift, and go to state 31
    LOOP    shift, and go to state 32
    RESULT  shift, and go to state 33
    RETURN  shift, and go to state 34
    SKIP    shift, and go to state 35
    VAR     shift, and go to state 97
    CONST   shift, and go to state 98
    ID      shift, and go to state 36

    $default  reduce using rule 66 (block_program)

    local_variable_declaration  go to state 99
    block_program               go to state 143
    stmt                        go to state 101
    block_stmt                  go to state 38
    assign_stmt                 go to state 39
    put_stmt                    go to state 40
    get_stmt                    go to state 41
    result_stmt                 go to state 42
    exit_stmt                   go to state 43
    skip_stmt                   go to state 44
    if_stmt                     go to state 45
    loop_stmt                   go to state 46
    for_stmt                    go to state 47
    function_call_stmt          go to state 48


State 100

   79 block_stmt: _BEGIN $@6 block_program . END

    END  shift, and go to state 144


State 101

   65 block_program: stmt . block_program

    PUT     shift, and go to state 26
    _BEGIN  shift, and go to state 27
    IF      shift, and go to state 28
    EXIT    shift, and go to state 29
    FOR     shift, and go to state 30
    GET     shift, and go to state 31
    LOOP    shift, and go to state 32
    RESULT  shift, and go to state 33
    RETURN  shift, and go to state 34
    SKIP    shift, and go to state 35
    VAR     shift, and go to state 97
    CONST   shift, and go to state 98
    ID      shift, and go to state 36

    $default  reduce using rule 66 (block_program)

    local_variable_declaration  go to state 99
    block_program               go to state 145
    stmt                        go to state 101
    block_stmt                  go to state 38
    assign_stmt                 go to state 39
    put_stmt                    go to state 40
    get_stmt                    go to state 41
    result_stmt                 go to state 42
    exit_stmt                   go to state 43
    skip_stmt                   go to state 44
    if_stmt                     go to state 45
    loop_stmt                   go to state 46
    for_stmt                    go to state 47
    function_call_stmt          go to state 48


State 102

   24 const_expr: const_expr . MOD const_expr
   25           | const_expr . MUL const_expr
   26           | const_expr . DIV const_expr
   27           | const_expr . ADD const_expr
   28           | const_expr . SUB const_expr
   29           | const_expr . AND const_expr
   30           | const_expr . OR const_expr
   31           | const_expr . LT const_expr
   32           | const_expr . LE const_expr
   33           | const_expr . EQ const_expr
   34           | const_expr . GE const_expr
   35           | const_expr . GT const_expr
   36           | const_expr . NE const_expr
   39           | LPAREN const_expr . RPAREN

    RPAREN  shift, and go to state 146
    AND     shift, and go to state 107
    OR      shift, and go to state 108
    LT      shift, and go to state 109
    LE      shift, and go to state 110
    EQ      shift, and go to state 111
    GE      shift, and go to state 112
    GT      shift, and go to state 113
    NE      shift, and go to state 114
    ADD     shift, and go to state 115
    SUB     shift, and go to state 116
    MUL     shift, and go to state 117
    DIV     shift, and go to state 118
    MOD     shift, and go to state 119


State 103

   24 const_expr: const_expr . MOD const_expr
   25           | const_expr . MUL const_expr
   26           | const_expr . DIV const_expr
   27           | const_expr . ADD const_expr
   28           | const_expr . SUB const_expr
   29           | const_expr . AND const_expr
   30           | const_expr . OR const_expr
   31           | const_expr . LT const_expr
   32           | const_expr . LE const_expr
   33           | const_expr . EQ const_expr
   34           | const_expr . GE const_expr
   35           | const_expr . GT const_expr
   36           | const_expr . NE const_expr
   37           | NOT const_expr .

    LT   shift, and go to state 109
    LE   shift, and go to state 110
    EQ   shift, and go to state 111
    GE   shift, and go to state 112
    GT   shift, and go to state 113
    NE   shift, and go to state 114
    ADD  shift, and go to state 115
    SUB  shift, and go to state 116
    MUL  shift, and go to state 117
    DIV  shift, and go to state 118
    MOD  shift, and go to state 119

    $default  reduce using rule 37 (const_expr)


State 104

   24 const_expr: const_expr . MOD const_expr
   25           | const_expr . MUL const_expr
   26           | const_expr . DIV const_expr
   27           | const_expr . ADD const_expr
   28           | const_expr . SUB const_expr
   29           | const_expr . AND const_expr
   30           | const_expr . OR const_expr
   31           | const_expr . LT const_expr
   32           | const_expr . LE const_expr
   33           | const_expr . EQ const_expr
   34           | const_expr . GE const_expr
   35           | const_expr . GT const_expr
   36           | const_expr . NE const_expr
   38           | SUB const_expr .

    $default  reduce using rule 38 (const_expr)


State 105

   44 const_val: ID LBRACKET . const_expr RBRACKET

    LPAREN     shift, and go to state 66
    NOT        shift, and go to state 67
    SUB        shift, and go to state 68
    I_CONST    shift, and go to state 69
    F_CONST    shift, and go to state 70
    STR_CONST  shift, and go to state 71
    ID         shift, and go to state 72
    TRUE       shift, and go to state 73
    FALSE      shift, and go to state 74

    const_expr          go to state 147
    const_val           go to state 76
    function_call_stmt  go to state 77


State 106

   93 if_stmt: IF const_expr THEN . $@8 block_program $@9 end_if_stmt

    $default  reduce using rule 91 ($@8)

    $@8  go to state 148


State 107

   29 const_expr: const_expr AND . const_expr

    LPAREN     shift, and go to state 66
    NOT        shift, and go to state 67
    SUB        shift, and go to state 68
    I_CONST    shift, and go to state 69
    F_CONST    shift, and go to state 70
    STR_CONST  shift, and go to state 71
    ID         shift, and go to state 72
    TRUE       shift, and go to state 73
    FALSE      shift, and go to state 74

    const_expr          go to state 149
    const_val           go to state 76
    function_call_stmt  go to state 77


State 108

   30 const_expr: const_expr OR . const_expr

    LPAREN     shift, and go to state 66
    NOT        shift, and go to state 67
    SUB        shift, and go to state 68
    I_CONST    shift, and go to state 69
    F_CONST    shift, and go to state 70
    STR_CONST  shift, and go to state 71
    ID         shift, and go to state 72
    TRUE       shift, and go to state 73
    FALSE      shift, and go to state 74

    const_expr          go to state 150
    const_val           go to state 76
    function_call_stmt  go to state 77


State 109

   31 const_expr: const_expr LT . const_expr

    LPAREN     shift, and go to state 66
    NOT        shift, and go to state 67
    SUB        shift, and go to state 68
    I_CONST    shift, and go to state 69
    F_CONST    shift, and go to state 70
    STR_CONST  shift, and go to state 71
    ID         shift, and go to state 72
    TRUE       shift, and go to state 73
    FALSE      shift, and go to state 74

    const_expr          go to state 151
    const_val           go to state 76
    function_call_stmt  go to state 77


State 110

   32 const_expr: const_expr LE . const_expr

    LPAREN     shift, and go to state 66
    NOT        shift, and go to state 67
    SUB        shift, and go to state 68
    I_CONST    shift, and go to state 69
    F_CONST    shift, and go to state 70
    STR_CONST  shift, and go to state 71
    ID         shift, and go to state 72
    TRUE       shift, and go to state 73
    FALSE      shift, and go to state 74

    const_expr          go to state 152
    const_val           go to state 76
    function_call_stmt  go to state 77


State 111

   33 const_expr: const_expr EQ . const_expr

    LPAREN     shift, and go to state 66
    NOT        shift, and go to state 67
    SUB        shift, and go to state 68
    I_CONST    shift, and go to state 69
    F_CONST    shift, and go to state 70
    STR_CONST  shift, and go to state 71
    ID         shift, and go to state 72
    TRUE       shift, and go to state 73
    FALSE      shift, and go to state 74

    const_expr          go to state 153
    const_val           go to state 76
    function_call_stmt  go to state 77


State 112

   34 const_expr: const_expr GE . const_expr

    LPAREN     shift, and go to state 66
    NOT        shift, and go to state 67
    SUB        shift, and go to state 68
    I_CONST    shift, and go to state 69
    F_CONST    shift, and go to state 70
    STR_CONST  shift, and go to state 71
    ID         shift, and go to state 72
    TRUE       shift, and go to state 73
    FALSE      shift, and go to state 74

    const_expr          go to state 154
    const_val           go to state 76
    function_call_stmt  go to state 77


State 113

   35 const_expr: const_expr GT . const_expr

    LPAREN     shift, and go to state 66
    NOT        shift, and go to state 67
    SUB        shift, and go to state 68
    I_CONST    shift, and go to state 69
    F_CONST    shift, and go to state 70
    STR_CONST  shift, and go to state 71
    ID         shift, and go to state 72
    TRUE       shift, and go to state 73
    FALSE      shift, and go to state 74

    const_expr          go to state 155
    const_val           go to state 76
    function_call_stmt  go to state 77


State 114

   36 const_expr: const_expr NE . const_expr

    LPAREN     shift, and go to state 66
    NOT        shift, and go to state 67
    SUB        shift, and go to state 68
    I_CONST    shift, and go to state 69
    F_CONST    shift, and go to state 70
    STR_CONST  shift, and go to state 71
    ID         shift, and go to state 72
    TRUE       shift, and go to state 73
    FALSE      shift, and go to state 74

    const_expr          go to state 156
    const_val           go to state 76
    function_call_stmt  go to state 77


State 115

   27 const_expr: const_expr ADD . const_expr

    LPAREN     shift, and go to state 66
    NOT        shift, and go to state 67
    SUB        shift, and go to state 68
    I_CONST    shift, and go to state 69
    F_CONST    shift, and go to state 70
    STR_CONST  shift, and go to state 71
    ID         shift, and go to state 72
    TRUE       shift, and go to state 73
    FALSE      shift, and go to state 74

    const_expr          go to state 157
    const_val           go to state 76
    function_call_stmt  go to state 77


State 116

   28 const_expr: const_expr SUB . const_expr

    LPAREN     shift, and go to state 66
    NOT        shift, and go to state 67
    SUB        shift, and go to state 68
    I_CONST    shift, and go to state 69
    F_CONST    shift, and go to state 70
    STR_CONST  shift, and go to state 71
    ID         shift, and go to state 72
    TRUE       shift, and go to state 73
    FALSE      shift, and go to state 74

    const_expr          go to state 158
    const_val           go to state 76
    function_call_stmt  go to state 77


State 117

   25 const_expr: const_expr MUL . const_expr

    LPAREN     shift, and go to state 66
    NOT        shift, and go to state 67
    SUB        shift, and go to state 68
    I_CONST    shift, and go to state 69
    F_CONST    shift, and go to state 70
    STR_CONST  shift, and go to state 71
    ID         shift, and go to state 72
    TRUE       shift, and go to state 73
    FALSE      shift, and go to state 74

    const_expr          go to state 159
    const_val           go to state 76
    function_call_stmt  go to state 77


State 118

   26 const_expr: const_expr DIV . const_expr

    LPAREN     shift, and go to state 66
    NOT        shift, and go to state 67
    SUB        shift, and go to state 68
    I_CONST    shift, and go to state 69
    F_CONST    shift, and go to state 70
    STR_CONST  shift, and go to state 71
    ID         shift, and go to state 72
    TRUE       shift, and go to state 73
    FALSE      shift, and go to state 74

    const_expr          go to state 160
    const_val           go to state 76
    function_call_stmt  go to state 77


State 119

   24 const_expr: const_expr MOD . const_expr

    LPAREN     shift, and go to state 66
    NOT        shift, and go to state 67
    SUB        shift, and go to state 68
    I_CONST    shift, and go to state 69
    F_CONST    shift, and go to state 70
    STR_CONST  shift, and go to state 71
    ID         shift, and go to state 72
    TRUE       shift, and go to state 73
    FALSE      shift, and go to state 74

    const_expr          go to state 161
    const_val           go to state 76
    function_call_stmt  go to state 77


State 120

   24 const_expr: const_expr . MOD const_expr
   25           | const_expr . MUL const_expr
   26           | const_expr . DIV const_expr
   27           | const_expr . ADD const_expr
   28           | const_expr . SUB const_expr
   29           | const_expr . AND const_expr
   30           | const_expr . OR const_expr
   31           | const_expr . LT const_expr
   32           | const_expr . LE const_expr
   33           | const_expr . EQ const_expr
   34           | const_expr . GE const_expr
   35           | const_expr . GT const_expr
   36           | const_expr . NE const_expr
   89 exit_stmt: EXIT WHEN const_expr .

    AND  shift, and go to state 107
    OR   shift, and go to state 108
    LT   shift, and go to state 109
    LE   shift, and go to state 110
    EQ   shift, and go to state 111
    GE   shift, and go to state 112
    GT   shift, and go to state 113
    NE   shift, and go to state 114
    ADD  shift, and go to state 115
    SUB  shift, and go to state 116
    MUL  shift, and go to state 117
    DIV  shift, and go to state 118
    MOD  shift, and go to state 119

    $default  reduce using rule 89 (exit_stmt)


State 121

  105 for_stmt: FOR DECREASING ID . $@15 COLON for_para DOT DOT for_para $@16 block_program END FOR

    $default  reduce using rule 103 ($@15)

    $@15  go to state 162


State 122

  102 for_stmt: FOR ID $@13 . COLON for_para DOT DOT for_para $@14 block_program END FOR

    COLON  shift, and go to state 163


State 123

   85 get_stmt: GET ID LBRACKET . const_expr RBRACKET

    LPAREN     shift, and go to state 66
    NOT        shift, and go to state 67
    SUB        shift, and go to state 68
    I_CONST    shift, and go to state 69
    F_CONST    shift, and go to state 70
    STR_CONST  shift, and go to state 71
    ID         shift, and go to state 72
    TRUE       shift, and go to state 73
    FALSE      shift, and go to state 74

    const_expr          go to state 164
    const_val           go to state 76
    function_call_stmt  go to state 77


State 124

   99 loop_stmt: LOOP $@12 block_program . END LOOP

    END  shift, and go to state 165


State 125

  108 function_call_stmt: ID LPAREN RPAREN .

    $default  reduce using rule 108 (function_call_stmt)


State 126

   24 const_expr: const_expr . MOD const_expr
   25           | const_expr . MUL const_expr
   26           | const_expr . DIV const_expr
   27           | const_expr . ADD const_expr
   28           | const_expr . SUB const_expr
   29           | const_expr . AND const_expr
   30           | const_expr . OR const_expr
   31           | const_expr . LT const_expr
   32           | const_expr . LE const_expr
   33           | const_expr . EQ const_expr
   34           | const_expr . GE const_expr
   35           | const_expr . GT const_expr
   36           | const_expr . NE const_expr
  110 function_call_para: const_expr .
  111                   | const_expr . COMMA function_call_para

    COMMA  shift, and go to state 166
    AND    shift, and go to state 107
    OR     shift, and go to state 108
    LT     shift, and go to state 109
    LE     shift, and go to state 110
    EQ     shift, and go to state 111
    GE     shift, and go to state 112
    GT     shift, and go to state 113
    NE     shift, and go to state 114
    ADD    shift, and go to state 115
    SUB    shift, and go to state 116
    MUL    shift, and go to state 117
    DIV    shift, and go to state 118
    MOD    shift, and go to state 119

    $default  reduce using rule 110 (function_call_para)


State 127

  109 function_call_stmt: ID LPAREN function_call_para . RPAREN

    RPAREN  shift, and go to state 167


State 128

   24 const_expr: const_expr . MOD const_expr
   25           | const_expr . MUL const_expr
   26           | const_expr . DIV const_expr
   27           | const_expr . ADD const_expr
   28           | const_expr . SUB const_expr
   29           | const_expr . AND const_expr
   30           | const_expr . OR const_expr
   31           | const_expr . LT const_expr
   32           | const_expr . LE const_expr
   33           | const_expr . EQ const_expr
   34           | const_expr . GE const_expr
   35           | const_expr . GT const_expr
   36           | const_expr . NE const_expr
   81 assign_stmt: ID LBRACKET const_expr . RBRACKET ASSIGN const_expr

    RBRACKET  shift, and go to state 168
    AND       shift, and go to state 107
    OR        shift, and go to state 108
    LT        shift, and go to state 109
    LE        shift, and go to state 110
    EQ        shift, and go to state 111
    GE        shift, and go to state 112
    GT        shift, and go to state 113
    NE        shift, and go to state 114
    ADD       shift, and go to state 115
    SUB       shift, and go to state 116
    MUL       shift, and go to state 117
    DIV       shift, and go to state 118
    MOD       shift, and go to state 119


State 129

   24 const_expr: const_expr . MOD const_expr
   25           | const_expr . MUL const_expr
   26           | const_expr . DIV const_expr
   27           | const_expr . ADD const_expr
   28           | const_expr . SUB const_expr
   29           | const_expr . AND const_expr
   30           | const_expr . OR const_expr
   31           | const_expr . LT const_expr
   32           | const_expr . LE const_expr
   33           | const_expr . EQ const_expr
   34           | const_expr . GE const_expr
   35           | const_expr . GT const_expr
   36           | const_expr . NE const_expr
   80 assign_stmt: ID ASSIGN const_expr .

    AND  shift, and go to state 107
    OR   shift, and go to state 108
    LT   shift, and go to state 109
    LE   shift, and go to state 110
    EQ   shift, and go to state 111
    GE   shift, and go to state 112
    GT   shift, and go to state 113
    NE   shift, and go to state 114
    ADD  shift, and go to state 115
    SUB  shift, and go to state 116
    MUL  shift, and go to state 117
    DIV  shift, and go to state 118
    MOD  shift, and go to state 119

    $default  reduce using rule 80 (assign_stmt)


State 130

   48 datatype: INT .

    $default  reduce using rule 48 (datatype)


State 131

   53 function_declaration: FUNCTION ID LPAREN RPAREN COLON datatype . $@2 block_program END ID

    $default  reduce using rule 52 ($@2)

    $@2  go to state 169


State 132

   62 para_declaration: ID COLON ARRAY . I_CONST DOT DOT I_CONST OF datatype
   63                 | ID COLON ARRAY . I_CONST DOT DOT I_CONST OF datatype COMMA para_declaration

    I_CONST  shift, and go to state 170


State 133

   60 para_declaration: ID COLON datatype .

    $default  reduce using rule 60 (para_declaration)


State 134

   61 para_declaration: para_declaration COMMA ID . COLON datatype

    COLON  shift, and go to state 171


State 135

   55 function_declaration: FUNCTION ID LPAREN para_declaration RPAREN COLON . datatype $@3 block_program END ID

    BOOL    shift, and go to state 54
    REAL    shift, and go to state 55
    INT     shift, and go to state 130
    STRING  shift, and go to state 57

    datatype  go to state 172


State 136

   57 procedure_declaration: PROCEDURE ID LPAREN RPAREN $@4 block_program . END ID

    END  shift, and go to state 173


State 137

   59 procedure_declaration: PROCEDURE ID LPAREN para_declaration RPAREN $@5 . block_program END ID

    PUT     shift, and go to state 26
    _BEGIN  shift, and go to state 27
    IF      shift, and go to state 28
    EXIT    shift, and go to state 29
    FOR     shift, and go to state 30
    GET     shift, and go to state 31
    LOOP    shift, and go to state 32
    RESULT  shift, and go to state 33
    RETURN  shift, and go to state 34
    SKIP    shift, and go to state 35
    VAR     shift, and go to state 97
    CONST   shift, and go to state 98
    ID      shift, and go to state 36

    $default  reduce using rule 66 (block_program)

    local_variable_declaration  go to state 99
    block_program               go to state 174
    stmt                        go to state 101
    block_stmt                  go to state 38
    assign_stmt                 go to state 39
    put_stmt                    go to state 40
    get_stmt                    go to state 41
    result_stmt                 go to state 42
    exit_stmt                   go to state 43
    skip_stmt                   go to state 44
    if_stmt                     go to state 45
    loop_stmt                   go to state 46
    for_stmt                    go to state 47
    function_call_stmt          go to state 48


State 138

   11 global_variable_declaration: VAR ID COLON INT ASSIGN I_CONST .

    $default  reduce using rule 11 (global_variable_declaration)


State 139

   15 const_variable_declaration: COLON INT ASSIGN I_CONST .

    $default  reduce using rule 15 (const_variable_declaration)


State 140

   17 const_variable_declaration: COLON STRING ASSIGN STR_CONST .

    $default  reduce using rule 17 (const_variable_declaration)


State 141

   13 local_variable_declaration: VAR ID . local_var_variable_declaration

    COLON   shift, and go to state 175
    ASSIGN  shift, and go to state 176

    local_var_variable_declaration  go to state 177


State 142

   12 local_variable_declaration: CONST ID . const_variable_declaration

    COLON   shift, and go to state 23
    ASSIGN  shift, and go to state 24

    const_variable_declaration  go to state 178


State 143

   64 block_program: local_variable_declaration block_program .

    $default  reduce using rule 64 (block_program)


State 144

   79 block_stmt: _BEGIN $@6 block_program END .

    $default  reduce using rule 79 (block_stmt)


State 145

   65 block_program: stmt block_program .

    $default  reduce using rule 65 (block_program)


State 146

   39 const_expr: LPAREN const_expr RPAREN .

    $default  reduce using rule 39 (const_expr)


State 147

   24 const_expr: const_expr . MOD const_expr
   25           | const_expr . MUL const_expr
   26           | const_expr . DIV const_expr
   27           | const_expr . ADD const_expr
   28           | const_expr . SUB const_expr
   29           | const_expr . AND const_expr
   30           | const_expr . OR const_expr
   31           | const_expr . LT const_expr
   32           | const_expr . LE const_expr
   33           | const_expr . EQ const_expr
   34           | const_expr . GE const_expr
   35           | const_expr . GT const_expr
   36           | const_expr . NE const_expr
   44 const_val: ID LBRACKET const_expr . RBRACKET

    RBRACKET  shift, and go to state 179
    AND       shift, and go to state 107
    OR        shift, and go to state 108
    LT        shift, and go to state 109
    LE        shift, and go to state 110
    EQ        shift, and go to state 111
    GE        shift, and go to state 112
    GT        shift, and go to state 113
    NE        shift, and go to state 114
    ADD       shift, and go to state 115
    SUB       shift, and go to state 116
    MUL       shift, and go to state 117
    DIV       shift, and go to state 118
    MOD       shift, and go to state 119


State 148

   93 if_stmt: IF const_expr THEN $@8 . block_program $@9 end_if_stmt

    PUT     shift, and go to state 26
    _BEGIN  shift, and go to state 27
    IF      shift, and go to state 28
    EXIT    shift, and go to state 29
    FOR     shift, and go to state 30
    GET     shift, and go to state 31
    LOOP    shift, and go to state 32
    RESULT  shift, and go to state 33
    RETURN  shift, and go to state 34
    SKIP    shift, and go to state 35
    VAR     shift, and go to state 97
    CONST   shift, and go to state 98
    ID      shift, and go to state 36

    $default  reduce using rule 66 (block_program)

    local_variable_declaration  go to state 99
    block_program               go to state 180
    stmt                        go to state 101
    block_stmt                  go to state 38
    assign_stmt                 go to state 39
    put_stmt                    go to state 40
    get_stmt                    go to state 41
    result_stmt                 go to state 42
    exit_stmt                   go to state 43
    skip_stmt                   go to state 44
    if_stmt                     go to state 45
    loop_stmt                   go to state 46
    for_stmt                    go to state 47
    function_call_stmt          go to state 48


State 149

   24 const_expr: const_expr . MOD const_expr
   25           | const_expr . MUL const_expr
   26           | const_expr . DIV const_expr
   27           | const_expr . ADD const_expr
   28           | const_expr . SUB const_expr
   29           | const_expr . AND const_expr
   29           | const_expr AND const_expr .
   30           | const_expr . OR const_expr
   31           | const_expr . LT const_expr
   32           | const_expr . LE const_expr
   33           | const_expr . EQ const_expr
   34           | const_expr . GE const_expr
   35           | const_expr . GT const_expr
   36           | const_expr . NE const_expr

    LT   shift, and go to state 109
    LE   shift, and go to state 110
    EQ   shift, and go to state 111
    GE   shift, and go to state 112
    GT   shift, and go to state 113
    NE   shift, and go to state 114
    ADD  shift, and go to state 115
    SUB  shift, and go to state 116
    MUL  shift, and go to state 117
    DIV  shift, and go to state 118
    MOD  shift, and go to state 119

    $default  reduce using rule 29 (const_expr)


State 150

   24 const_expr: const_expr . MOD const_expr
   25           | const_expr . MUL const_expr
   26           | const_expr . DIV const_expr
   27           | const_expr . ADD const_expr
   28           | const_expr . SUB const_expr
   29           | const_expr . AND const_expr
   30           | const_expr . OR const_expr
   30           | const_expr OR const_expr .
   31           | const_expr . LT const_expr
   32           | const_expr . LE const_expr
   33           | const_expr . EQ const_expr
   34           | const_expr . GE const_expr
   35           | const_expr . GT const_expr
   36           | const_expr . NE const_expr

    LT   shift, and go to state 109
    LE   shift, and go to state 110
    EQ   shift, and go to state 111
    GE   shift, and go to state 112
    GT   shift, and go to state 113
    NE   shift, and go to state 114
    ADD  shift, and go to state 115
    SUB  shift, and go to state 116
    MUL  shift, and go to state 117
    DIV  shift, and go to state 118
    MOD  shift, and go to state 119

    $default  reduce using rule 30 (const_expr)


State 151

   24 const_expr: const_expr . MOD const_expr
   25           | const_expr . MUL const_expr
   26           | const_expr . DIV const_expr
   27           | const_expr . ADD const_expr
   28           | const_expr . SUB const_expr
   29           | const_expr . AND const_expr
   30           | const_expr . OR const_expr
   31           | const_expr . LT const_expr
   31           | const_expr LT const_expr .
   32           | const_expr . LE const_expr
   33           | const_expr . EQ const_expr
   34           | const_expr . GE const_expr
   35           | const_expr . GT const_expr
   36           | const_expr . NE const_expr

    ADD  shift, and go to state 115
    SUB  shift, and go to state 116
    MUL  shift, and go to state 117
    DIV  shift, and go to state 118
    MOD  shift, and go to state 119

    $default  reduce using rule 31 (const_expr)


State 152

   24 const_expr: const_expr . MOD const_expr
   25           | const_expr . MUL const_expr
   26           | const_expr . DIV const_expr
   27           | const_expr . ADD const_expr
   28           | const_expr . SUB const_expr
   29           | const_expr . AND const_expr
   30           | const_expr . OR const_expr
   31           | const_expr . LT const_expr
   32           | const_expr . LE const_expr
   32           | const_expr LE const_expr .
   33           | const_expr . EQ const_expr
   34           | const_expr . GE const_expr
   35           | const_expr . GT const_expr
   36           | const_expr . NE const_expr

    ADD  shift, and go to state 115
    SUB  shift, and go to state 116
    MUL  shift, and go to state 117
    DIV  shift, and go to state 118
    MOD  shift, and go to state 119

    $default  reduce using rule 32 (const_expr)


State 153

   24 const_expr: const_expr . MOD const_expr
   25           | const_expr . MUL const_expr
   26           | const_expr . DIV const_expr
   27           | const_expr . ADD const_expr
   28           | const_expr . SUB const_expr
   29           | const_expr . AND const_expr
   30           | const_expr . OR const_expr
   31           | const_expr . LT const_expr
   32           | const_expr . LE const_expr
   33           | const_expr . EQ const_expr
   33           | const_expr EQ const_expr .
   34           | const_expr . GE const_expr
   35           | const_expr . GT const_expr
   36           | const_expr . NE const_expr

    ADD  shift, and go to state 115
    SUB  shift, and go to state 116
    MUL  shift, and go to state 117
    DIV  shift, and go to state 118
    MOD  shift, and go to state 119

    $default  reduce using rule 33 (const_expr)


State 154

   24 const_expr: const_expr . MOD const_expr
   25           | const_expr . MUL const_expr
   26           | const_expr . DIV const_expr
   27           | const_expr . ADD const_expr
   28           | const_expr . SUB const_expr
   29           | const_expr . AND const_expr
   30           | const_expr . OR const_expr
   31           | const_expr . LT const_expr
   32           | const_expr . LE const_expr
   33           | const_expr . EQ const_expr
   34           | const_expr . GE const_expr
   34           | const_expr GE const_expr .
   35           | const_expr . GT const_expr
   36           | const_expr . NE const_expr

    ADD  shift, and go to state 115
    SUB  shift, and go to state 116
    MUL  shift, and go to state 117
    DIV  shift, and go to state 118
    MOD  shift, and go to state 119

    $default  reduce using rule 34 (const_expr)


State 155

   24 const_expr: const_expr . MOD const_expr
   25           | const_expr . MUL const_expr
   26           | const_expr . DIV const_expr
   27           | const_expr . ADD const_expr
   28           | const_expr . SUB const_expr
   29           | const_expr . AND const_expr
   30           | const_expr . OR const_expr
   31           | const_expr . LT const_expr
   32           | const_expr . LE const_expr
   33           | const_expr . EQ const_expr
   34           | const_expr . GE const_expr
   35           | const_expr . GT const_expr
   35           | const_expr GT const_expr .
   36           | const_expr . NE const_expr

    ADD  shift, and go to state 115
    SUB  shift, and go to state 116
    MUL  shift, and go to state 117
    DIV  shift, and go to state 118
    MOD  shift, and go to state 119

    $default  reduce using rule 35 (const_expr)


State 156

   24 const_expr: const_expr . MOD const_expr
   25           | const_expr . MUL const_expr
   26           | const_expr . DIV const_expr
   27           | const_expr . ADD const_expr
   28           | const_expr . SUB const_expr
   29           | const_expr . AND const_expr
   30           | const_expr . OR const_expr
   31           | const_expr . LT const_expr
   32           | const_expr . LE const_expr
   33           | const_expr . EQ const_expr
   34           | const_expr . GE const_expr
   35           | const_expr . GT const_expr
   36           | const_expr . NE const_expr
   36           | const_expr NE const_expr .

    ADD  shift, and go to state 115
    SUB  shift, and go to state 116
    MUL  shift, and go to state 117
    DIV  shift, and go to state 118
    MOD  shift, and go to state 119

    $default  reduce using rule 36 (const_expr)


State 157

   24 const_expr: const_expr . MOD const_expr
   25           | const_expr . MUL const_expr
   26           | const_expr . DIV const_expr
   27           | const_expr . ADD const_expr
   27           | const_expr ADD const_expr .
   28           | const_expr . SUB const_expr
   29           | const_expr . AND const_expr
   30           | const_expr . OR const_expr
   31           | const_expr . LT const_expr
   32           | const_expr . LE const_expr
   33           | const_expr . EQ const_expr
   34           | const_expr . GE const_expr
   35           | const_expr . GT const_expr
   36           | const_expr . NE const_expr

    MUL  shift, and go to state 117
    DIV  shift, and go to state 118
    MOD  shift, and go to state 119

    $default  reduce using rule 27 (const_expr)


State 158

   24 const_expr: const_expr . MOD const_expr
   25           | const_expr . MUL const_expr
   26           | const_expr . DIV const_expr
   27           | const_expr . ADD const_expr
   28           | const_expr . SUB const_expr
   28           | const_expr SUB const_expr .
   29           | const_expr . AND const_expr
   30           | const_expr . OR const_expr
   31           | const_expr . LT const_expr
   32           | const_expr . LE const_expr
   33           | const_expr . EQ const_expr
   34           | const_expr . GE const_expr
   35           | const_expr . GT const_expr
   36           | const_expr . NE const_expr

    MUL  shift, and go to state 117
    DIV  shift, and go to state 118
    MOD  shift, and go to state 119

    $default  reduce using rule 28 (const_expr)


State 159

   24 const_expr: const_expr . MOD const_expr
   25           | const_expr . MUL const_expr
   25           | const_expr MUL const_expr .
   26           | const_expr . DIV const_expr
   27           | const_expr . ADD const_expr
   28           | const_expr . SUB const_expr
   29           | const_expr . AND const_expr
   30           | const_expr . OR const_expr
   31           | const_expr . LT const_expr
   32           | const_expr . LE const_expr
   33           | const_expr . EQ const_expr
   34           | const_expr . GE const_expr
   35           | const_expr . GT const_expr
   36           | const_expr . NE const_expr

    $default  reduce using rule 25 (const_expr)


State 160

   24 const_expr: const_expr . MOD const_expr
   25           | const_expr . MUL const_expr
   26           | const_expr . DIV const_expr
   26           | const_expr DIV const_expr .
   27           | const_expr . ADD const_expr
   28           | const_expr . SUB const_expr
   29           | const_expr . AND const_expr
   30           | const_expr . OR const_expr
   31           | const_expr . LT const_expr
   32           | const_expr . LE const_expr
   33           | const_expr . EQ const_expr
   34           | const_expr . GE const_expr
   35           | const_expr . GT const_expr
   36           | const_expr . NE const_expr

    $default  reduce using rule 26 (const_expr)


State 161

   24 const_expr: const_expr . MOD const_expr
   24           | const_expr MOD const_expr .
   25           | const_expr . MUL const_expr
   26           | const_expr . DIV const_expr
   27           | const_expr . ADD const_expr
   28           | const_expr . SUB const_expr
   29           | const_expr . AND const_expr
   30           | const_expr . OR const_expr
   31           | const_expr . LT const_expr
   32           | const_expr . LE const_expr
   33           | const_expr . EQ const_expr
   34           | const_expr . GE const_expr
   35           | const_expr . GT const_expr
   36           | const_expr . NE const_expr

    $default  reduce using rule 24 (const_expr)


State 162

  105 for_stmt: FOR DECREASING ID $@15 . COLON for_para DOT DOT for_para $@16 block_program END FOR

    COLON  shift, and go to state 181


State 163

  102 for_stmt: FOR ID $@13 COLON . for_para DOT DOT for_para $@14 block_program END FOR

    I_CONST  shift, and go to state 182
    ID       shift, and go to state 183

    for_para  go to state 184


State 164

   24 const_expr: const_expr . MOD const_expr
   25           | const_expr . MUL const_expr
   26           | const_expr . DIV const_expr
   27           | const_expr . ADD const_expr
   28           | const_expr . SUB const_expr
   29           | const_expr . AND const_expr
   30           | const_expr . OR const_expr
   31           | const_expr . LT const_expr
   32           | const_expr . LE const_expr
   33           | const_expr . EQ const_expr
   34           | const_expr . GE const_expr
   35           | const_expr . GT const_expr
   36           | const_expr . NE const_expr
   85 get_stmt: GET ID LBRACKET const_expr . RBRACKET

    RBRACKET  shift, and go to state 185
    AND       shift, and go to state 107
    OR        shift, and go to state 108
    LT        shift, and go to state 109
    LE        shift, and go to state 110
    EQ        shift, and go to state 111
    GE        shift, and go to state 112
    GT        shift, and go to state 113
    NE        shift, and go to state 114
    ADD       shift, and go to state 115
    SUB       shift, and go to state 116
    MUL       shift, and go to state 117
    DIV       shift, and go to state 118
    MOD       shift, and go to state 119


State 165

   99 loop_stmt: LOOP $@12 block_program END . LOOP

    LOOP  shift, and go to state 186


State 166

  111 function_call_para: const_expr COMMA . function_call_para

    LPAREN     shift, and go to state 66
    NOT        shift, and go to state 67
    SUB        shift, and go to state 68
    I_CONST    shift, and go to state 69
    F_CONST    shift, and go to state 70
    STR_CONST  shift, and go to state 71
    ID         shift, and go to state 72
    TRUE       shift, and go to state 73
    FALSE      shift, and go to state 74

    const_expr          go to state 126
    const_val           go to state 76
    function_call_stmt  go to state 77
    function_call_para  go to state 187


State 167

  109 function_call_stmt: ID LPAREN function_call_para RPAREN .

    $default  reduce using rule 109 (function_call_stmt)


State 168

   81 assign_stmt: ID LBRACKET const_expr RBRACKET . ASSIGN const_expr

    ASSIGN  shift, and go to state 188


State 169

   53 function_declaration: FUNCTION ID LPAREN RPAREN COLON datatype $@2 . block_program END ID

    PUT     shift, and go to state 26
    _BEGIN  shift, and go to state 27
    IF      shift, and go to state 28
    EXIT    shift, and go to state 29
    FOR     shift, and go to state 30
    GET     shift, and go to state 31
    LOOP    shift, and go to state 32
    RESULT  shift, and go to state 33
    RETURN  shift, and go to state 34
    SKIP    shift, and go to state 35
    VAR     shift, and go to state 97
    CONST   shift, and go to state 98
    ID      shift, and go to state 36

    $default  reduce using rule 66 (block_program)

    local_variable_declaration  go to state 99
    block_program               go to state 189
    stmt                        go to state 101
    block_stmt                  go to state 38
    assign_stmt                 go to state 39
    put_stmt                    go to state 40
    get_stmt                    go to state 41
    result_stmt                 go to state 42
    exit_stmt                   go to state 43
    skip_stmt                   go to state 44
    if_stmt                     go to state 45
    loop_stmt                   go to state 46
    for_stmt                    go to state 47
    function_call_stmt          go to state 48


State 170

   62 para_declaration: ID COLON ARRAY I_CONST . DOT DOT I_CONST OF datatype
   63                 | ID COLON ARRAY I_CONST . DOT DOT I_CONST OF datatype COMMA para_declaration

    DOT  shift, and go to state 190


State 171

   61 para_declaration: para_declaration COMMA ID COLON . datatype

    BOOL    shift, and go to state 54
    REAL    shift, and go to state 55
    INT     shift, and go to state 130
    STRING  shift, and go to state 57

    datatype  go to state 191


State 172

   55 function_declaration: FUNCTION ID LPAREN para_declaration RPAREN COLON datatype . $@3 block_program END ID

    $default  reduce using rule 54 ($@3)

    $@3  go to state 192


State 173

   57 procedure_declaration: PROCEDURE ID LPAREN RPAREN $@4 block_program END . ID

    ID  shift, and go to state 193


State 174

   59 procedure_declaration: PROCEDURE ID LPAREN para_declaration RPAREN $@5 block_program . END ID

    END  shift, and go to state 194


State 175

   19 local_var_variable_declaration: COLON . INT
   20                               | COLON . INT ASSIGN const_expr
   21                               | COLON . BOOL
   22                               | COLON . BOOL ASSIGN const_expr

    BOOL  shift, and go to state 195
    INT   shift, and go to state 196


State 176

   18 local_var_variable_declaration: ASSIGN . const_expr

    LPAREN     shift, and go to state 66
    NOT        shift, and go to state 67
    SUB        shift, and go to state 68
    I_CONST    shift, and go to state 69
    F_CONST    shift, and go to state 70
    STR_CONST  shift, and go to state 71
    ID         shift, and go to state 72
    TRUE       shift, and go to state 73
    FALSE      shift, and go to state 74

    const_expr          go to state 197
    const_val           go to state 76
    function_call_stmt  go to state 77


State 177

   13 local_variable_declaration: VAR ID local_var_variable_declaration .

    $default  reduce using rule 13 (local_variable_declaration)


State 178

   12 local_variable_declaration: CONST ID const_variable_declaration .

    $default  reduce using rule 12 (local_variable_declaration)


State 179

   44 const_val: ID LBRACKET const_expr RBRACKET .

    $default  reduce using rule 44 (const_val)


State 180

   93 if_stmt: IF const_expr THEN $@8 block_program . $@9 end_if_stmt

    $default  reduce using rule 92 ($@9)

    $@9  go to state 198


State 181

  105 for_stmt: FOR DECREASING ID $@15 COLON . for_para DOT DOT for_para $@16 block_program END FOR

    I_CONST  shift, and go to state 182
    ID       shift, and go to state 183

    for_para  go to state 199


State 182

  106 for_para: I_CONST .

    $default  reduce using rule 106 (for_para)


State 183

  107 for_para: ID .

    $default  reduce using rule 107 (for_para)


State 184

  102 for_stmt: FOR ID $@13 COLON for_para . DOT DOT for_para $@14 block_program END FOR

    DOT  shift, and go to state 200


State 185

   85 get_stmt: GET ID LBRACKET const_expr RBRACKET .

    $default  reduce using rule 85 (get_stmt)


State 186

   99 loop_stmt: LOOP $@12 block_program END LOOP .

    $default  reduce using rule 99 (loop_stmt)


State 187

  111 function_call_para: const_expr COMMA function_call_para .

    $default  reduce using rule 111 (function_call_para)


State 188

   81 assign_stmt: ID LBRACKET const_expr RBRACKET ASSIGN . const_expr

    LPAREN     shift, and go to state 66
    NOT        shift, and go to state 67
    SUB        shift, and go to state 68
    I_CONST    shift, and go to state 69
    F_CONST    shift, and go to state 70
    STR_CONST  shift, and go to state 71
    ID         shift, and go to state 72
    TRUE       shift, and go to state 73
    FALSE      shift, and go to state 74

    const_expr          go to state 201
    const_val           go to state 76
    function_call_stmt  go to state 77


State 189

   53 function_declaration: FUNCTION ID LPAREN RPAREN COLON datatype $@2 block_program . END ID

    END  shift, and go to state 202


State 190

   62 para_declaration: ID COLON ARRAY I_CONST DOT . DOT I_CONST OF datatype
   63                 | ID COLON ARRAY I_CONST DOT . DOT I_CONST OF datatype COMMA para_declaration

    DOT  shift, and go to state 203


State 191

   61 para_declaration: para_declaration COMMA ID COLON datatype .

    $default  reduce using rule 61 (para_declaration)


State 192

   55 function_declaration: FUNCTION ID LPAREN para_declaration RPAREN COLON datatype $@3 . block_program END ID

    PUT     shift, and go to state 26
    _BEGIN  shift, and go to state 27
    IF      shift, and go to state 28
    EXIT    shift, and go to state 29
    FOR     shift, and go to state 30
    GET     shift, and go to state 31
    LOOP    shift, and go to state 32
    RESULT  shift, and go to state 33
    RETURN  shift, and go to state 34
    SKIP    shift, and go to state 35
    VAR     shift, and go to state 97
    CONST   shift, and go to state 98
    ID      shift, and go to state 36

    $default  reduce using rule 66 (block_program)

    local_variable_declaration  go to state 99
    block_program               go to state 204
    stmt                        go to state 101
    block_stmt                  go to state 38
    assign_stmt                 go to state 39
    put_stmt                    go to state 40
    get_stmt                    go to state 41
    result_stmt                 go to state 42
    exit_stmt                   go to state 43
    skip_stmt                   go to state 44
    if_stmt                     go to state 45
    loop_stmt                   go to state 46
    for_stmt                    go to state 47
    function_call_stmt          go to state 48


State 193

   57 procedure_declaration: PROCEDURE ID LPAREN RPAREN $@4 block_program END ID .

    $default  reduce using rule 57 (procedure_declaration)


State 194

   59 procedure_declaration: PROCEDURE ID LPAREN para_declaration RPAREN $@5 block_program END . ID

    ID  shift, and go to state 205


State 195

   21 local_var_variable_declaration: COLON BOOL .
   22                               | COLON BOOL . ASSIGN const_expr

    ASSIGN  shift, and go to state 206

    $default  reduce using rule 21 (local_var_variable_declaration)


State 196

   19 local_var_variable_declaration: COLON INT .
   20                               | COLON INT . ASSIGN const_expr

    ASSIGN  shift, and go to state 207

    $default  reduce using rule 19 (local_var_variable_declaration)


State 197

   18 local_var_variable_declaration: ASSIGN const_expr .
   24 const_expr: const_expr . MOD const_expr
   25           | const_expr . MUL const_expr
   26           | const_expr . DIV const_expr
   27           | const_expr . ADD const_expr
   28           | const_expr . SUB const_expr
   29           | const_expr . AND const_expr
   30           | const_expr . OR const_expr
   31           | const_expr . LT const_expr
   32           | const_expr . LE const_expr
   33           | const_expr . EQ const_expr
   34           | const_expr . GE const_expr
   35           | const_expr . GT const_expr
   36           | const_expr . NE const_expr

    AND  shift, and go to state 107
    OR   shift, and go to state 108
    LT   shift, and go to state 109
    LE   shift, and go to state 110
    EQ   shift, and go to state 111
    GE   shift, and go to state 112
    GT   shift, and go to state 113
    NE   shift, and go to state 114
    ADD  shift, and go to state 115
    SUB  shift, and go to state 116
    MUL  shift, and go to state 117
    DIV  shift, and go to state 118
    MOD  shift, and go to state 119

    $default  reduce using rule 18 (local_var_variable_declaration)


State 198

   93 if_stmt: IF const_expr THEN $@8 block_program $@9 . end_if_stmt

    ELSE  shift, and go to state 208
    END   shift, and go to state 209

    end_if_stmt  go to state 210


State 199

  105 for_stmt: FOR DECREASING ID $@15 COLON for_para . DOT DOT for_para $@16 block_program END FOR

    DOT  shift, and go to state 211


State 200

  102 for_stmt: FOR ID $@13 COLON for_para DOT . DOT for_para $@14 block_program END FOR

    DOT  shift, and go to state 212


State 201

   24 const_expr: const_expr . MOD const_expr
   25           | const_expr . MUL const_expr
   26           | const_expr . DIV const_expr
   27           | const_expr . ADD const_expr
   28           | const_expr . SUB const_expr
   29           | const_expr . AND const_expr
   30           | const_expr . OR const_expr
   31           | const_expr . LT const_expr
   32           | const_expr . LE const_expr
   33           | const_expr . EQ const_expr
   34           | const_expr . GE const_expr
   35           | const_expr . GT const_expr
   36           | const_expr . NE const_expr
   81 assign_stmt: ID LBRACKET const_expr RBRACKET ASSIGN const_expr .

    AND  shift, and go to state 107
    OR   shift, and go to state 108
    LT   shift, and go to state 109
    LE   shift, and go to state 110
    EQ   shift, and go to state 111
    GE   shift, and go to state 112
    GT   shift, and go to state 113
    NE   shift, and go to state 114
    ADD  shift, and go to state 115
    SUB  shift, and go to state 116
    MUL  shift, and go to state 117
    DIV  shift, and go to state 118
    MOD  shift, and go to state 119

    $default  reduce using rule 81 (assign_stmt)


State 202

   53 function_declaration: FUNCTION ID LPAREN RPAREN COLON datatype $@2 block_program END . ID

    ID  shift, and go to state 213


State 203

   62 para_declaration: ID COLON ARRAY I_CONST DOT DOT . I_CONST OF datatype
   63                 | ID COLON ARRAY I_CONST DOT DOT . I_CONST OF datatype COMMA para_declaration

    I_CONST  shift, and go to state 214


State 204

   55 function_declaration: FUNCTION ID LPAREN para_declaration RPAREN COLON datatype $@3 block_program . END ID

    END  shift, and go to state 215


State 205

   59 procedure_declaration: PROCEDURE ID LPAREN para_declaration RPAREN $@5 block_program END ID .

    $default  reduce using rule 59 (procedure_declaration)


State 206

   22 local_var_variable_declaration: COLON BOOL ASSIGN . const_expr

    LPAREN     shift, and go to state 66
    NOT        shift, and go to state 67
    SUB        shift, and go to state 68
    I_CONST    shift, and go to state 69
    F_CONST    shift, and go to state 70
    STR_CONST  shift, and go to state 71
    ID         shift, and go to state 72
    TRUE       shift, and go to state 73
    FALSE      shift, and go to state 74

    const_expr          go to state 216
    const_val           go to state 76
    function_call_stmt  go to state 77


State 207

   20 local_var_variable_declaration: COLON INT ASSIGN . const_expr

    LPAREN     shift, and go to state 66
    NOT        shift, and go to state 67
    SUB        shift, and go to state 68
    I_CONST    shift, and go to state 69
    F_CONST    shift, and go to state 70
    STR_CONST  shift, and go to state 71
    ID         shift, and go to state 72
    TRUE       shift, and go to state 73
    FALSE      shift, and go to state 74

    const_expr          go to state 217
    const_val           go to state 76
    function_call_stmt  go to state 77


State 208

   97 end_if_stmt: ELSE . $@10 block_program $@11 END IF

    $default  reduce using rule 95 ($@10)

    $@10  go to state 218


State 209

   94 end_if_stmt: END . IF

    IF  shift, and go to state 219


State 210

   93 if_stmt: IF const_expr THEN $@8 block_program $@9 end_if_stmt .

    $default  reduce using rule 93 (if_stmt)


State 211

  105 for_stmt: FOR DECREASING ID $@15 COLON for_para DOT . DOT for_para $@16 block_program END FOR

    DOT  shift, and go to state 220


State 212

  102 for_stmt: FOR ID $@13 COLON for_para DOT DOT . for_para $@14 block_program END FOR

    I_CONST  shift, and go to state 182
    ID       shift, and go to state 183

    for_para  go to state 221


State 213

   53 function_declaration: FUNCTION ID LPAREN RPAREN COLON datatype $@2 block_program END ID .

    $default  reduce using rule 53 (function_declaration)


State 214

   62 para_declaration: ID COLON ARRAY I_CONST DOT DOT I_CONST . OF datatype
   63                 | ID COLON ARRAY I_CONST DOT DOT I_CONST . OF datatype COMMA para_declaration

    OF  shift, and go to state 222


State 215

   55 function_declaration: FUNCTION ID LPAREN para_declaration RPAREN COLON datatype $@3 block_program END . ID

    ID  shift, and go to state 223


State 216

   22 local_var_variable_declaration: COLON BOOL ASSIGN const_expr .
   24 const_expr: const_expr . MOD const_expr
   25           | const_expr . MUL const_expr
   26           | const_expr . DIV const_expr
   27           | const_expr . ADD const_expr
   28           | const_expr . SUB const_expr
   29           | const_expr . AND const_expr
   30           | const_expr . OR const_expr
   31           | const_expr . LT const_expr
   32           | const_expr . LE const_expr
   33           | const_expr . EQ const_expr
   34           | const_expr . GE const_expr
   35           | const_expr . GT const_expr
   36           | const_expr . NE const_expr

    AND  shift, and go to state 107
    OR   shift, and go to state 108
    LT   shift, and go to state 109
    LE   shift, and go to state 110
    EQ   shift, and go to state 111
    GE   shift, and go to state 112
    GT   shift, and go to state 113
    NE   shift, and go to state 114
    ADD  shift, and go to state 115
    SUB  shift, and go to state 116
    MUL  shift, and go to state 117
    DIV  shift, and go to state 118
    MOD  shift, and go to state 119

    $default  reduce using rule 22 (local_var_variable_declaration)


State 217

   20 local_var_variable_declaration: COLON INT ASSIGN const_expr .
   24 const_expr: const_expr . MOD const_expr
   25           | const_expr . MUL const_expr
   26           | const_expr . DIV const_expr
   27           | const_expr . ADD const_expr
   28           | const_expr . SUB const_expr
   29           | const_expr . AND const_expr
   30           | const_expr . OR const_expr
   31           | const_expr . LT const_expr
   32           | const_expr . LE const_expr
   33           | const_expr . EQ const_expr
   34           | const_expr . GE const_expr
   35           | const_expr . GT const_expr
   36           | const_expr . NE const_expr

    AND  shift, and go to state 107
    OR   shift, and go to state 108
    LT   shift, and go to state 109
    LE   shift, and go to state 110
    EQ   shift, and go to state 111
    GE   shift, and go to state 112
    GT   shift, and go to state 113
    NE   shift, and go to state 114
    ADD  shift, and go to state 115
    SUB  shift, and go to state 116
    MUL  shift, and go to state 117
    DIV  shift, and go to state 118
    MOD  shift, and go to state 119

    $default  reduce using rule 20 (local_var_variable_declaration)


State 218

   97 end_if_stmt: ELSE $@10 . block_program $@11 END IF

    PUT     shift, and go to state 26
    _BEGIN  shift, and go to state 27
    IF      shift, and go to state 28
    EXIT    shift, and go to state 29
    FOR     shift, and go to state 30
    GET     shift, and go to state 31
    LOOP    shift, and go to state 32
    RESULT  shift, and go to state 33
    RETURN  shift, and go to state 34
    SKIP    shift, and go to state 35
    VAR     shift, and go to state 97
    CONST   shift, and go to state 98
    ID      shift, and go to state 36

    $default  reduce using rule 66 (block_program)

    local_variable_declaration  go to state 99
    block_program               go to state 224
    stmt                        go to state 101
    block_stmt                  go to state 38
    assign_stmt                 go to state 39
    put_stmt                    go to state 40
    get_stmt                    go to state 41
    result_stmt                 go to state 42
    exit_stmt                   go to state 43
    skip_stmt                   go to state 44
    if_stmt                     go to state 45
    loop_stmt                   go to state 46
    for_stmt                    go to state 47
    function_call_stmt          go to state 48


State 219

   94 end_if_stmt: END IF .

    $default  reduce using rule 94 (end_if_stmt)


State 220

  105 for_stmt: FOR DECREASING ID $@15 COLON for_para DOT DOT . for_para $@16 block_program END FOR

    I_CONST  shift, and go to state 182
    ID       shift, and go to state 183

    for_para  go to state 225


State 221

  102 for_stmt: FOR ID $@13 COLON for_para DOT DOT for_para . $@14 block_program END FOR

    $default  reduce using rule 101 ($@14)

    $@14  go to state 226


State 222

   62 para_declaration: ID COLON ARRAY I_CONST DOT DOT I_CONST OF . datatype
   63                 | ID COLON ARRAY I_CONST DOT DOT I_CONST OF . datatype COMMA para_declaration

    BOOL    shift, and go to state 54
    REAL    shift, and go to state 55
    INT     shift, and go to state 130
    STRING  shift, and go to state 57

    datatype  go to state 227


State 223

   55 function_declaration: FUNCTION ID LPAREN para_declaration RPAREN COLON datatype $@3 block_program END ID .

    $default  reduce using rule 55 (function_declaration)


State 224

   97 end_if_stmt: ELSE $@10 block_program . $@11 END IF

    $default  reduce using rule 96 ($@11)

    $@11  go to state 228


State 225

  105 for_stmt: FOR DECREASING ID $@15 COLON for_para DOT DOT for_para . $@16 block_program END FOR

    $default  reduce using rule 104 ($@16)

    $@16  go to state 229


State 226

  102 for_stmt: FOR ID $@13 COLON for_para DOT DOT for_para $@14 . block_program END FOR

    PUT     shift, and go to state 26
    _BEGIN  shift, and go to state 27
    IF      shift, and go to state 28
    EXIT    shift, and go to state 29
    FOR     shift, and go to state 30
    GET     shift, and go to state 31
    LOOP    shift, and go to state 32
    RESULT  shift, and go to state 33
    RETURN  shift, and go to state 34
    SKIP    shift, and go to state 35
    VAR     shift, and go to state 97
    CONST   shift, and go to state 98
    ID      shift, and go to state 36

    $default  reduce using rule 66 (block_program)

    local_variable_declaration  go to state 99
    block_program               go to state 230
    stmt                        go to state 101
    block_stmt                  go to state 38
    assign_stmt                 go to state 39
    put_stmt                    go to state 40
    get_stmt                    go to state 41
    result_stmt                 go to state 42
    exit_stmt                   go to state 43
    skip_stmt                   go to state 44
    if_stmt                     go to state 45
    loop_stmt                   go to state 46
    for_stmt                    go to state 47
    function_call_stmt          go to state 48


State 227

   62 para_declaration: ID COLON ARRAY I_CONST DOT DOT I_CONST OF datatype .
   63                 | ID COLON ARRAY I_CONST DOT DOT I_CONST OF datatype . COMMA para_declaration

    COMMA  shift, and go to state 231

    COMMA     [reduce using rule 62 (para_declaration)]
    $default  reduce using rule 62 (para_declaration)


State 228

   97 end_if_stmt: ELSE $@10 block_program $@11 . END IF

    END  shift, and go to state 232


State 229

  105 for_stmt: FOR DECREASING ID $@15 COLON for_para DOT DOT for_para $@16 . block_program END FOR

    PUT     shift, and go to state 26
    _BEGIN  shift, and go to state 27
    IF      shift, and go to state 28
    EXIT    shift, and go to state 29
    FOR     shift, and go to state 30
    GET     shift, and go to state 31
    LOOP    shift, and go to state 32
    RESULT  shift, and go to state 33
    RETURN  shift, and go to state 34
    SKIP    shift, and go to state 35
    VAR     shift, and go to state 97
    CONST   shift, and go to state 98
    ID      shift, and go to state 36

    $default  reduce using rule 66 (block_program)

    local_variable_declaration  go to state 99
    block_program               go to state 233
    stmt                        go to state 101
    block_stmt                  go to state 38
    assign_stmt                 go to state 39
    put_stmt                    go to state 40
    get_stmt                    go to state 41
    result_stmt                 go to state 42
    exit_stmt                   go to state 43
    skip_stmt                   go to state 44
    if_stmt                     go to state 45
    loop_stmt                   go to state 46
    for_stmt                    go to state 47
    function_call_stmt          go to state 48


State 230

  102 for_stmt: FOR ID $@13 COLON for_para DOT DOT for_para $@14 block_program . END FOR

    END  shift, and go to state 234


State 231

   63 para_declaration: ID COLON ARRAY I_CONST DOT DOT I_CONST OF datatype COMMA . para_declaration

    ID  shift, and go to state 50

    para_declaration  go to state 235


State 232

   97 end_if_stmt: ELSE $@10 block_program $@11 END . IF

    IF  shift, and go to state 236


State 233

  105 for_stmt: FOR DECREASING ID $@15 COLON for_para DOT DOT for_para $@16 block_program . END FOR

    END  shift, and go to state 237


State 234

  102 for_stmt: FOR ID $@13 COLON for_para DOT DOT for_para $@14 block_program END . FOR

    FOR  shift, and go to state 238


State 235

   61 para_declaration: para_declaration . COMMA ID COLON datatype
   63                 | ID COLON ARRAY I_CONST DOT DOT I_CONST OF datatype COMMA para_declaration .

    COMMA  shift, and go to state 89

    COMMA     [reduce using rule 63 (para_declaration)]
    $default  reduce using rule 63 (para_declaration)


State 236

   97 end_if_stmt: ELSE $@10 block_program $@11 END IF .

    $default  reduce using rule 97 (end_if_stmt)


State 237

  105 for_stmt: FOR DECREASING ID $@15 COLON for_para DOT DOT for_para $@16 block_program END . FOR

    FOR  shift, and go to state 239


State 238

  102 for_stmt: FOR ID $@13 COLON for_para DOT DOT for_para $@14 block_program END FOR .

    $default  reduce using rule 102 (for_stmt)


State 239

  105 for_stmt: FOR DECREASING ID $@15 COLON for_para DOT DOT for_para $@16 block_program END FOR .

    $default  reduce using rule 105 (for_stmt)
