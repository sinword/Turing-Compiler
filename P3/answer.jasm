/*-------------------------------------------------*/
/* Java Assembly Code */
/*-------------------------------------------------*/
class example
{
    /* 6: const a :int := 5 */
    field static int c
    /* 7: var c :int */
    /* 8: */
    method public static int add(int, int)
    max_stack 15
    max_locals 15
    {
        /* 10: function add (a :int, b :int) :int */
        iload 0
        iload 1
        iadd
        ireturn
        /* 11: result a+b */
    }
    /* 12: end add */
    /* 13: */
    method public static void main(java.lang.String[])
    max_stack 15
    max_locals 15
    {
        sipush 5
        sipush 10
        invokestatic int example.add(int, int)
        putstatic int example.c
        /* 15: c := add(a, 10) */
        getstatic int example.c
        sipush 10
        isub    
        ifgt L0
        iconst_0
        goto L1
        L0:
        iconst_1
        L1:
            ifeq L2
            /* 16: if (c > 10) then */
            getstatic java.io.PrintStream java.lang.System.out
            getstatic int example.c
            ineg
            invokevirtual void java.io.PrintStream.print(int)
            /* 17: put -c */
            goto L3
            L2:
            /* 18: else */
            getstatic java.io.PrintStream java.lang.System.out
            getstatic int example.c
            invokevirtual void java.io.PrintStream.print(int)
            /* 19: put c */
        L3:
        /* 20: end if */
        getstatic java.io.PrintStream java.lang.System.out
        ldc "Hello World"
        invokevirtual void java.io.PrintStream.print(java.lang.String)
        /* 21: put "Hello World" */
        return
    }
}